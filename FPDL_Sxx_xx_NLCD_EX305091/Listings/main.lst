C51 COMPILER V9.60.0.0   MAIN                                                              05/09/2023 17:03:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\Application\main.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(
                    -.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.
                    -\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tuya)
                    - DEBUG PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "i2c.h"
   2          #include "usart.h"
   3          #include "spi.h"
   4          #include "tim.h"
   5          #include "IO.h"
   6          #include "LCD_HFG12864.h"
   7          #include <string.h>
   8          #include "RTC_PCF8563.h"
   9          #include "RTC.h"
  10          #include "adc.h"
  11          #include "BeepMgr.h"
  12          #include "Key_SinOne.h"
  13          #include "MFC_WS1850.h"
  14          #include "yc_nfc_contactless_l1.h"
  15          #include "TuyaWIFI.h"
  16          #include "GUI_Function.h"
  17          #include "Basic_Function.h"
  18          #include "Flash.h"
  19          #include "FingerPrint.h"
  20          #include "LEDsMgr.h"
  21          #include "Motor.h"
  22          #include "Battery.h"
  23          #include "HallSlide.h"
  24          #include "Log.h"
  25          #include "LowPower.h"
  26          #include "FP.h"
  27          #include "GUI.h"
  28          
  29          /**************************************************************
  30          说明：
  31          ***************************************************************/
  32          uint8_t ReadRTC = 0;
  33          uint8_t TextBuff[10]={0x11,0x22,0x33};
  34          extern void test_fun();
  35          
  36          //uint8_t system_IC_busy_Flag = 0;
  37          void Main_System_Init(void)
  38          {
  39   1        EnableWDT();
  40   1        MX_GPIO_Init();
  41   1        SET_MFC_RST_H;
  42   1        MX_ADC1_Init();
  43   1        MX_TIM_Init();
  44   1        MX_SPI0_Init();
  45   1        MX_UART2_Init();
  46   1        
  47   1        #ifdef Function_TuyaWifi
                //Wifi_Init();
                //MX_UART1_Init();
                Wifi_Rst();
                #endif
  52   1        
C51 COMPILER V9.60.0.0   MAIN                                                              05/09/2023 17:03:20 PAGE 2   

  53   1        FPcmd_Init();
  54   1        MX_I2C_Init();
  55   1        SYSPOWER_ON;  
  56   1        #ifdef Function_USE_External_RTC
                PCF8563_Init();
                Hardware_DelayMs(10);
                #endif  
  60   1        FPMpowerMgr.Status = FPMpowerOn;
  61   1        VOICE_Init();
  62   1        MFC_Init();
  63   1        Hardware_DelayMs(10);
  64   1        Touch_Init();
  65   1        Hardware_DelayMs(10);
  66   1        SystemTime.year   =   0x20;
  67   1        SystemTime.month  =   1;
  68   1        SystemTime.date   =   1;
  69   1        SystemTime.day    =   3;
  70   1        SystemTime.hour     =   0;
  71   1        SystemTime.minute   =   0;
  72   1        SystemTime.second   =   0;
  73   1        #ifdef Function_USE_Internal_RTC
                G_SystemUTCTime = SystemTimeToUTC(SystemTime);
                #elif defined Function_USE_External_RTC
                PCF8563_WriteTime();
                #endif
  78   1        GUI_Init();
  79   1        
  80   1        SafetyMonitorMgr.FpIdentifyFailedTimes = 0;
  81   1        SafetyMonitorMgr.CardIdentifyFailedTimes = 0;
  82   1        SafetyMonitorMgr.PasscodeIdentifyFailedTimes = 0;
  83   1        SafetyMonitorMgr.ManagerPasscodeIdentifyFailedTimes = 0;
  84   1        SafetyMonitorMgr.SystemLocked = bFALSE;
  85   1        UserIdentifyResultMgr.FlagContinuedOpenEnabled = bFALSE;
  86   1        
  87   1        /* Configure The Touch*/
  88   1        #ifdef Function_EventLog
                LogMgr_Init();
                #endif
  91   1        /* Configure The Motor*/
  92   1        Hardware_MotorMgr_Init();
  93   1        
  94   1        CurrentScreen = SCREEN_Initialization;
  95   1        InitializationMgr.Status = StartInitialization;
  96   1        BatteryMgr.ProtectVoltageTriggerTimes = 0;
  97   1        BatteryMgr.LowBatteryProtectionEnabled = bFALSE;
  98   1        BatteryMgr.BatteryVoltage = 0;
  99   1        VoiceMgr.volume = 20; // default volume
 100   1        SET_VOLUME(VoiceMgr.volume);
 101   1        
 102   1        AntiPryingMgr.AntiPryingTrigger = bFALSE;
 103   1        AntiPryingMgr.AntiPryingSignalRelease = bFALSE; 
 104   1        #ifdef Function_HallSlide
                HallSlideCover_Init();
                #endif
 107   1        #ifdef Function_TuyaWifi
                WifiMgr.PowerState = WIFIPowerClosed;
                #endif
 110   1        RefreshSystemSleepTime();
 111   1      }
 112          void main(void)
 113          {
 114   1        uint8_t i;
C51 COMPILER V9.60.0.0   MAIN                                                              05/09/2023 17:03:20 PAGE 3   

 115   1        uint32_t Awake_key=0;
 116   1        
 117   1        FLASH_OB_Config();      //v121和中微有差异
 118   1        Main_System_Init();
 119   1        
 120   1        for (i = 0; i < 50; i++) 
 121   1        {
 122   2            Hardware_Task_Analog();
 123   2            HardwareBatteryMgr_Task();
 124   2        } //更新50次ADC
 125   1        
 126   1        #ifdef Function_FPMbreathingLed
 127   1        SetFPMbreathingLed(FPMbreathingLed_Bule);
 128   1        #endif
 129   1        Hardware_MotorMgr_Init(); //电机初始化
 130   1        
 131   1        while (1)
 132   1        {
 133   2          if ( G_tflagbits.T1024Hz == 1 )
 134   2          {
 135   3            G_tflagbits.T1024Hz =0;
 136   3          }
 137   2      
 138   2          if ( G_tflagbits.T256Hz == 1 )
 139   2          {
 140   3            G_tflagbits.T256Hz =0;      
 141   3          }
 142   2          
 143   2          if ( G_tflagbits.T64Hz == 1 )
 144   2          {
 145   3            G_tflagbits.T64Hz = 0;
 146   3        
 147   3            FPM_Mgr_Task();
 148   3            
 149   3            #if defined (Function_TuyaWifi)
                    Wifi_Mgr_Task();
                    #endif
 152   3      
 153   3            GUI_Task();
 154   3            
 155   3            Hardware_MotorMgr_Task(); 
 156   3      
 157   3            #if (defined ProjectIs_BarLock_S7702) || (defined ProjectIs_BarLock_S4914)
 158   3            LEDsMgr_Task();
 159   3            #endif
 160   3      
 161   3            if ( SystemPowerMgr.SleepDelayTimerCnt > 0 )
 162   3            {
 163   4              SystemPowerMgr.SleepDelayTimerCnt--;
 164   4            }
 165   3            
 166   3            if (SystemPowerMgr.AwakeTimerCnt < 60)
 167   3            {
 168   4              SystemPowerMgr.AwakeTimerCnt++;
 169   4            }
 170   3            #ifdef Function_HallSlide
                    HallSleep_Task();
                    #endif
 173   3            if (( MotorMgr.MotorStatus == IDLE )
 174   3              //&&( PINMACRO_KB_IRQ_STATUS != 0x00 )   
 175   3              &&( CurrentScreen != SCREEN_Initialization )
 176   3              &&( CurrentScreen != SCREEN_PickLockAlarm )
C51 COMPILER V9.60.0.0   MAIN                                                              05/09/2023 17:03:20 PAGE 4   

 177   3              &&( CurrentScreen != SCREEN_SystemLocked )
 178   3              &&( CurrentScreen != SCREEN_AgingTest )
 179   3      //        &&(CurrentScreen != SCREEN_SelfTest)
 180   3              &&((SystemPowerMgr.SleepDelayTimerCnt == 0x0000)  
 181   3                ) //casing closed
 182   3              )
 183   3            {
 184   4              System_PowerDown();
 185   4              System_Awake();
 186   4              CLRWDT();
 187   4              RefreshSystemSleepTime();
 188   4              SystemPowerMgr.AwakeTimerCnt=0x0000;
 189   4            }
 190   3          }
 191   2          
 192   2      //    if ( G_tflagbits.T16Hz == 1 )
 193   2      //    {
 194   2      //      
 195   2      //    }
 196   2          
 197   2          if ( G_tflagbits.T8Hz == 1 )
 198   2          {
 199   3            G_tflagbits.T8Hz =0;
 200   3            CLRWDT();
 201   3            #ifdef Function_ScreenDisplay
                    //if(system_IC_busy_Flag == 0)
                    {
                      for(i=0;i<8;i++)
                      { 
                        Display_Task();
                      }
                    }
                    #endif  
 210   3            //Uart3SendStr(TextBuff,3);
 211   3          }
 212   2      
 213   2          if ( G_tflagbits.T2Hz == 1 )
 214   2          {
 215   3            G_tflagbits.T2Hz =0;
 216   3          }
 217   2          
 218   2          if ( G_tflagbits.T1Hz == 1 )
 219   2          {
 220   3            G_tflagbits.T1Hz =0;
 221   3            //SystemTimeUpdate(); 
 222   3            #ifdef Function_TuyaWifi      
                    WifiRemoteUnlockCountdown();
                    #endif
 225   3      
 226   3            //EEPROM_TESTING();
 227   3            //MFC_Test();
 228   3            //Flash_Test();
 229   3            //AppUnlockTest();
 230   3            #ifdef Function_USE_Internal_RTC
                    SystemTime = UTCToSystemtime(G_SystemUTCTime);
                    #elif defined Function_USE_External_RTC
                    if( ReadRTC == 0 )
                    {
                      PCF8563_ReadTime();
                    }
                    ReadRTC += 1;
                    if(ReadRTC >= 5)
C51 COMPILER V9.60.0.0   MAIN                                                              05/09/2023 17:03:20 PAGE 5   

                    ReadRTC = 0;
                    #endif
 241   3            DEBUG_MARK;
 242   3            
 243   3          }
 244   2        }
 245   1      }
 246          
 247          
 248          
 249          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
