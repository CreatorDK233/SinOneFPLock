C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/09/2023 17:03:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Objects\KeyScan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\ModuleLogic\KeyScan.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCD
                    -IR(.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protoco
                    -l;.\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tu
                    -ya) DEBUG PRINT(.\Listings\KeyScan.lst) TABS(2) OBJECT(.\Objects\KeyScan.obj)

line level    source

   1          #include "IO.h"
   2          #include "KeyScan.h"
   3          #include "global_variable.h"
   4          #include "Key_SinOne.h"
   5          
   6          #define Def_KeyHoldTimeLimited 96     //1.5s
   7          #define Def_KeyHoldLongTimeLimited  192   //3s
   8          
   9          keycode_t NewKeycode,LastKeycode;
  10          uint16_t KeyHoldTimeCnt=0;
  11          uint8_t KEYSCANTIMECNT=0;
  12          extern bit KeyJustWakeUp;
  13          
  14          TouchKeyStatus_t TouchKeyStatus;
  15          
  16          void Key_Init(void)
  17          {
  18   1        TouchKeyStatus.KEY_ZERO_Pressed = bFALSE;
  19   1        TouchKeyStatus.KEY_ONE_Pressed = bFALSE;
  20   1        TouchKeyStatus.KEY_TWO_Pressed = bFALSE;
  21   1        TouchKeyStatus.KEY_THREE_Pressed = bFALSE;
  22   1        TouchKeyStatus.KEY_FOUR_Pressed = bFALSE;
  23   1        TouchKeyStatus.KEY_FIVE_Pressed = bFALSE;
  24   1        TouchKeyStatus.KEY_SIX_Pressed = bFALSE;
  25   1        TouchKeyStatus.KEY_SEVEN_Pressed = bFALSE;
  26   1        TouchKeyStatus.KEY_EIGHT_Pressed = bFALSE;
  27   1        TouchKeyStatus.KEY_NINE_Pressed = bFALSE;
  28   1        TouchKeyStatus.KEY_POUNDSIGN_Pressed = bFALSE;
  29   1        TouchKeyStatus.KEY_ASTERISK_Pressed = bFALSE;
  30   1        TouchKeyStatus.KEY_DOORBELL_Pressed = bFALSE;
  31   1        TouchKeyStatus.KEY_DOORCLOSE_Pressed = bFALSE;
  32   1        TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  33   1      }
  34          
  35          keycode_t Key_Scan(void)
  36          {
  37   1        uint32_t key_value,temp;
  38   1        
  39   1        keycode_t PostKeycode;
  40   1        
  41   1        key_value = KeyScanDrive();
  42   1        
  43   1        if(key_value!=0)
  44   1        {
  45   2          temp = key_value;
  46   2        }
  47   1        
  48   1        if (SystemPowerMgr.AwakeTimerCnt < 32 )
  49   1        {
  50   2          return KEY_NONE;
  51   2        }
  52   1        if( KeyJustWakeUp == 1 )
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/09/2023 17:03:19 PAGE 2   

  53   1        {
  54   2          if( key_value == 0 )
  55   2          {
  56   3            KeyJustWakeUp = 0;
  57   3          }
  58   2          return KEY_NONE;
  59   2        }
  60   1        if( CurrentScreen == SCREEN_Main )
  61   1        {
  62   2          if( AwakeSystemKeyMgr.IsDoorBellKeyAwake == bTRUE )
  63   2          {
  64   3            AwakeSystemKeyMgr.IsDoorBellKeyAwake = bFALSE;
  65   3            return KEY_DOORBELL;
  66   3          }
  67   2          if( AwakeSystemKeyMgr.IsPoundsignKeyAwake == bTRUE )
  68   2          {
  69   3            AwakeSystemKeyMgr.IsPoundsignKeyAwake = bFALSE;
  70   3            return KEY_POUNDSIGN;
  71   3          }
  72   2        }
  73   1      
  74   1        KeyPressedJudge(key_value);
  75   1      
  76   1        if ( PINMACRO_ONBOARD_BUTTON_STATUS == 0 )
  77   1        {
  78   2          DEBUG_MARK;
  79   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
  80   2        }
  81   1        #ifdef INSIDEBUTTONINTOMAINMENU
                else if (SystemPowerMgr.AwakeSource == SystemResetKey)    
                  {
                      TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
                      SystemPowerMgr.AwakeSource = DoNotCare; 
                      //CurrentScreen = SCREEN_ManagerIdentify;
                      //ManagerIdentifyMgr.Status = StartManagerIdentify;
                  }
                #endif
  90   1        else{
  91   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  92   2        }
  93   1      
  94   1          
  95   1        if ( (TouchKeyStatus.KEY_ZERO_Pressed == bTRUE )&&(LastKeycode == KEY_ZERO)){
  96   2          NewKeycode = KEY_ZERO;
  97   2        }
  98   1        else if ( (TouchKeyStatus.KEY_ONE_Pressed == bTRUE )&&(LastKeycode == KEY_ONE)){
  99   2          NewKeycode = KEY_ONE;
 100   2        }
 101   1        else if ( (TouchKeyStatus.KEY_TWO_Pressed == bTRUE )&&(LastKeycode == KEY_TWO)){
 102   2          NewKeycode = KEY_TWO;
 103   2        }
 104   1        else if ( (TouchKeyStatus.KEY_THREE_Pressed == bTRUE )&&(LastKeycode == KEY_THREE)){
 105   2          NewKeycode = KEY_THREE;
 106   2        }
 107   1        else if ( (TouchKeyStatus.KEY_FOUR_Pressed == bTRUE )&&(LastKeycode == KEY_FOUR)){
 108   2          NewKeycode = KEY_FOUR;
 109   2        }
 110   1        else if ( (TouchKeyStatus.KEY_FIVE_Pressed == bTRUE )&&(LastKeycode == KEY_FIVE)){
 111   2          NewKeycode = KEY_FIVE;
 112   2        }
 113   1        else if ( (TouchKeyStatus.KEY_SIX_Pressed == bTRUE )&&(LastKeycode == KEY_SIX)){
 114   2          NewKeycode = KEY_SIX;
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/09/2023 17:03:19 PAGE 3   

 115   2        }
 116   1        else if ( (TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE )&&(LastKeycode == KEY_SEVEN)){
 117   2          NewKeycode = KEY_SEVEN;
 118   2        }
 119   1        else if ( (TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE )&&(LastKeycode == KEY_EIGHT)){
 120   2          NewKeycode = KEY_EIGHT;
 121   2        }
 122   1        else if ( (TouchKeyStatus.KEY_NINE_Pressed == bTRUE )&&(LastKeycode == KEY_NINE)){
 123   2          NewKeycode = KEY_NINE;
 124   2        }
 125   1        else if ( (TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE )&&(LastKeycode == KEY_POUNDSIGN)){
 126   2          NewKeycode = KEY_POUNDSIGN;
 127   2        }
 128   1        else if ( (TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE )&&(LastKeycode == KEY_ASTERISK)){
 129   2          NewKeycode = KEY_ASTERISK;
 130   2        }
 131   1        else if ( (TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE )&&(LastKeycode == KEY_INSIDEBUTTON)){
 132   2          NewKeycode = KEY_INSIDEBUTTON;
 133   2        }
 134   1        else if ((TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )&&(LastKeycode == KEY_DOORBELL))
 135   1        {
 136   2          NewKeycode = KEY_DOORBELL;
 137   2          DEBUG_MARK;
 138   2        }
 139   1        
 140   1        else if ( TouchKeyStatus.KEY_ZERO_Pressed == bTRUE ){
 141   2          NewKeycode = KEY_ZERO;
 142   2        }
 143   1        else if ( TouchKeyStatus.KEY_ONE_Pressed == bTRUE ){
 144   2          NewKeycode = KEY_ONE;
 145   2        }
 146   1        else if ( TouchKeyStatus.KEY_TWO_Pressed == bTRUE ){
 147   2          NewKeycode = KEY_TWO;
 148   2        }
 149   1        else if ( TouchKeyStatus.KEY_THREE_Pressed == bTRUE ){
 150   2          NewKeycode = KEY_THREE;
 151   2        }
 152   1        else if ( TouchKeyStatus.KEY_FOUR_Pressed == bTRUE ){
 153   2          NewKeycode = KEY_FOUR;
 154   2        }
 155   1        else if ( TouchKeyStatus.KEY_FIVE_Pressed == bTRUE ){
 156   2          NewKeycode = KEY_FIVE;
 157   2        }
 158   1        else if ( TouchKeyStatus.KEY_SIX_Pressed == bTRUE ){
 159   2          NewKeycode = KEY_SIX;
 160   2        }
 161   1        else if ( TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE ){
 162   2          NewKeycode = KEY_SEVEN;
 163   2        }
 164   1        else if ( TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE ){
 165   2          NewKeycode = KEY_EIGHT;
 166   2        }
 167   1        else if ( TouchKeyStatus.KEY_NINE_Pressed == bTRUE ){
 168   2          NewKeycode = KEY_NINE;
 169   2        }
 170   1        else if ( TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE ){
 171   2          NewKeycode = KEY_POUNDSIGN;
 172   2        }
 173   1        else if ( TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE ){
 174   2          NewKeycode = KEY_ASTERISK;
 175   2        }
 176   1        else if ( TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE ){
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/09/2023 17:03:19 PAGE 4   

 177   2          NewKeycode = KEY_INSIDEBUTTON;
 178   2        }
 179   1        else if (TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )
 180   1        {
 181   2          NewKeycode = KEY_DOORBELL;
 182   2        }
 183   1        
 184   1        else {
 185   2          NewKeycode = KEY_NONE;
 186   2        } 
 187   1      
 188   1        LEDsMgr.Keycode = NewKeycode;
 189   1      
 190   1        if ( NewKeycode != KEY_NONE )
 191   1        {
 192   2          if ( NewKeycode !=LastKeycode )
 193   2          {
 194   3            if (NewKeycode != KEY_INSIDEBUTTON)
 195   3            {
 196   4              PostKeycode = NewKeycode;
 197   4            }
 198   3            else{
 199   4              PostKeycode = KEY_NONE; 
 200   4              DEBUG_MARK;
 201   4            }
 202   3            LastKeycode = NewKeycode;
 203   3            KeyHoldTimeCnt=0;
 204   3          }
 205   2          else
 206   2          {
 207   3            if ( KeyHoldTimeCnt <= Def_KeyHoldLongTimeLimited )
 208   3            {
 209   4              KeyHoldTimeCnt++;
 210   4              PostKeycode = KEY_NONE;     
 211   4            }
 212   3      
 213   3            if ( KeyHoldTimeCnt > Def_KeyHoldTimeLimited )
 214   3            {
 215   4              if ((KeyHoldTimeCnt >= Def_KeyHoldLongTimeLimited )&&( NewKeycode == KEY_INSIDEBUTTON))
 216   4              {
 217   5                PostKeycode = KEY_INSIDEBUTTON_HOLD_LONG;       
 218   5              }
 219   4              else{
 220   5                PostKeycode = KEY_NONE;
 221   5              }
 222   4              
 223   4              if ( ++KEYSCANTIMECNT > 127 ){
 224   5                KEYSCANTIMECNT=0;
 225   5              }
 226   4            }
 227   3            else{
 228   4              PostKeycode = KEY_NONE;
 229   4            }
 230   3          }
 231   2        }
 232   1        else
 233   1        {
 234   2          if (LastKeycode == KEY_INSIDEBUTTON){
 235   3            PostKeycode = LastKeycode;
 236   3          }
 237   2          else{
 238   3            PostKeycode = KEY_NONE; 
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/09/2023 17:03:19 PAGE 5   

 239   3          }
 240   2          LastKeycode = NewKeycode;
 241   2          KeyHoldTimeCnt=0;
 242   2        }
 243   1      
 244   1        DEBUG_MARK;
 245   1      
 246   1        return PostKeycode;
 247   1      
 248   1      }
 249          
 250          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    873    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
