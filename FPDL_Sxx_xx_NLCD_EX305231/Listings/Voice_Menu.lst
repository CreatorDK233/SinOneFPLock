C51 COMPILER V9.60.0.0   VOICE_MENU                                                        05/23/2023 14:43:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE VOICE_MENU
OBJECT MODULE PLACED IN .\Objects\Voice_Menu.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\Basic\Voice_Menu.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(
                    -.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.
                    -\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tuya)
                    - DEBUG PRINT(.\Listings\Voice_Menu.lst) TABS(2) OBJECT(.\Objects\Voice_Menu.obj)

line level    source

   1          #include "Voice_Menu.h"
   2          #include "BeepMgr.h"
   3          #include "Project.h"
   4          
   5          
   6          code uint8_t MainMenuVoiceBuff[][6]=
   7          { 
   8            {VOICE_Press,VOICE_One,VOICE_Fingerprint,VOICE_User,VOICE_Management,DEF_VoiceSegmentEndFlag},
   9            {VOICE_Press,VOICE_Two,VOICE_Password,VOICE_User,VOICE_Management,DEF_VoiceSegmentEndFlag},
  10            {VOICE_Press,VOICE_Three,VOICE_Card,VOICE_User,VOICE_Management,DEF_VoiceSegmentEndFlag},
  11            {VOICE_Press,VOICE_Four,VOICE_SystemSetting,DEF_VoiceSegmentEndFlag},
  12            #ifdef Function_TuyaWifi
                {VOICE_Press,VOICE_Five,VOICE_NetWorking,DEF_VoiceSegmentEndFlag},
                #endif
  15            //{VOICE_Press,VOICE_Five,VOICE_Log,VOICE_Query,DEF_VoiceSegmentEndFlag},
  16            {VOICE_PressAsteriskKey,VOICE_ExitMenu,DEF_VoiceSegmentEndFlag}
  17          };
  18          
  19            
  20          code uint8_t FpMenuVoiceBuff[][7] = {
  21            {VOICE_Press,VOICE_One,VOICE_Add,VOICE_Administrator,VOICE_Fingerprint,DEF_VoiceSegmentEndFlag},
  22            {VOICE_Press,VOICE_Two,VOICE_Add,VOICE_User,VOICE_Fingerprint,DEF_VoiceSegmentEndFlag},
  23            {VOICE_Press,VOICE_Three,VOICE_Delete,VOICE_All,VOICE_User,VOICE_Fingerprint,DEF_VoiceSegmentEndFlag},
  24          #ifdef Function_Enable_ID_Del
  25            {VOICE_Press, VOICE_Four, VOICE_ID, VOICE_Delete,VOICE_User,VOICE_Fingerprint, DEF_VoiceSegmentEndFlag},
  26          #endif
  27            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  28          };
  29          code uint8_t PasscodeMenuVoiceBuff[][7]={ 
  30            {VOICE_Press,VOICE_One,VOICE_Add,VOICE_Administrator,VOICE_Password,DEF_VoiceSegmentEndFlag},
  31            {VOICE_Press,VOICE_Two,VOICE_Add,VOICE_User,VOICE_Password,DEF_VoiceSegmentEndFlag},
  32            {VOICE_Press,VOICE_Three,VOICE_Delete,VOICE_All,VOICE_User,VOICE_Password,DEF_VoiceSegmentEndFlag},
  33          #ifdef Function_Enable_ID_Del
  34            {VOICE_Press, VOICE_Four, VOICE_ID, VOICE_Delete,VOICE_User,VOICE_Password, DEF_VoiceSegmentEndFlag},
  35          #endif
  36            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  37          };
  38          
  39          code uint8_t CardUserMenuVoiceBuff[][7]={ 
  40            {VOICE_Press,VOICE_One,VOICE_Add,VOICE_Card,VOICE_User,DEF_VoiceSegmentEndFlag},
  41            {VOICE_Press,VOICE_Two,VOICE_Delete,VOICE_All,VOICE_Card,VOICE_User,DEF_VoiceSegmentEndFlag},
  42          #ifdef Function_Enable_ID_Del
  43            {VOICE_Press,VOICE_Three,VOICE_ID,VOICE_Delete,VOICE_Card,VOICE_User,DEF_VoiceSegmentEndFlag},
  44          #endif
  45            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  46          };
  47          
  48          code uint8_t LogMenuVoiceBuff[][7]={  
  49            {VOICE_Press,VOICE_One,VOICE_Log,VOICE_Query,DEF_VoiceSegmentEndFlag},
  50            {VOICE_Press,VOICE_Two,VOICE_Delete,VOICE_Log,DEF_VoiceSegmentEndFlag},
  51            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  52          };
C51 COMPILER V9.60.0.0   VOICE_MENU                                                        05/23/2023 14:43:21 PAGE 2   

  53          
  54          code uint8_t SystemConfigMenuVoiceBuff[][5]={ 
  55          //  {VOICE_Press,VOICE_One,VOICE_Time,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  56            #ifdef Function_VoiceEnabledEnglish
                {VOICE_Press,VOICE_One,VOICE_Language,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_Press,VOICE_Two,VOICE_Voice,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_Press,VOICE_Three,VOICE_NormallyOpen,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_Press,VOICE_Four,VOICE_UnlockingMode,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_Press,VOICE_Five,VOICE_AntiSkidAlarm,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_Press,VOICE_Six,VOICE_RestoreFactoryDefault,VOICE_Setting,DEF_VoiceSegmentEndFlag},
                {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
                #else
  65            {VOICE_Press,VOICE_One,VOICE_Voice,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  66            {VOICE_Press,VOICE_Two,VOICE_NormallyOpen,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  67            {VOICE_Press,VOICE_Three,VOICE_UnlockingMode,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  68            {VOICE_Press,VOICE_Four,VOICE_AntiSkidAlarm,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  69            {VOICE_Press,VOICE_Five,VOICE_RestoreFactoryDefault,VOICE_Setting,DEF_VoiceSegmentEndFlag},
  70            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  71            #endif
  72          };
  73          
  74          code uint8_t VolumeSetLanguageBuff[][4]={ 
  75            {VOICE_Press,VOICE_One,VOICE_Chinese,DEF_VoiceSegmentEndFlag},
  76            {VOICE_Press+1,VOICE_Two+1,VOICE_English,DEF_VoiceSegmentEndFlag},
  77            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  78          };
  79          
  80          
  81          code uint8_t VolumeSetVoiceBuff[][5]={  
  82            {VOICE_Press,VOICE_One,VOICE_Voice,VOICE_Open,DEF_VoiceSegmentEndFlag},
  83            {VOICE_Press,VOICE_Two,VOICE_Voice,VOICE_Close,DEF_VoiceSegmentEndFlag},
  84            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  85          };
  86          code uint8_t VoiceStr_VoiceOpened[] = {VOICE_Voice,VOICE_Opened,DEF_VoiceSegmentEndFlag};
  87          code uint8_t VoiceStr_VoiceClosed[] = {VOICE_Voice,VOICE_Closed,DEF_VoiceSegmentEndFlag};
  88          
  89          code uint8_t ContinuedOpenModeSetVoiceBuff[][6]={ 
  90            {VOICE_Press,VOICE_One,VOICE_NormallyOpen,VOICE_Open,DEF_VoiceSegmentEndFlag},
  91            {VOICE_Press,VOICE_Two,VOICE_NormallyOpen,VOICE_Close,DEF_VoiceSegmentEndFlag},
  92            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
  93          };
  94          code uint8_t VoiceStr_NormallyOpenModeOpened[] = {VOICE_NormallyOpen,VOICE_Opened,DEF_VoiceSegmentEndFlag}
             -;
  95          code uint8_t VoiceStr_NormallyOpenModeClosed[] = {VOICE_NormallyOpen,VOICE_Closed,DEF_VoiceSegmentEndFlag}
             -;
  96          
  97          
  98          code uint8_t UnlockModeSetVoiceBuff[][4]={  
  99            {VOICE_Press,VOICE_One,VOICE_SingleUnlock,DEF_VoiceSegmentEndFlag},
 100            {VOICE_Press,VOICE_Two,VOICE_CombinationUnlock,DEF_VoiceSegmentEndFlag},
 101            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
 102          };
 103          code uint8_t VoiceStr_SingleUnlockModeOpened[] = {VOICE_SingleUnlock,VOICE_Opened,DEF_VoiceSegmentEndFlag}
             -;
 104          code uint8_t VoiceStr_CombinationUnlockModeOpened[] = {VOICE_CombinationUnlock,VOICE_Opened,DEF_VoiceSegme
             -ntEndFlag};
 105          
 106          
 107          code uint8_t PickAlarmSetVoiceBuff[][5]={ 
 108            {VOICE_Press,VOICE_One,VOICE_AntiSkidAlarm,VOICE_Open,DEF_VoiceSegmentEndFlag},
 109            {VOICE_Press,VOICE_Two,VOICE_AntiSkidAlarm,VOICE_Close,DEF_VoiceSegmentEndFlag},
 110            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
C51 COMPILER V9.60.0.0   VOICE_MENU                                                        05/23/2023 14:43:21 PAGE 3   

 111          };
 112          code uint8_t VoiceStr_PickAlarmOpened[] = {VOICE_AntiSkidAlarm,VOICE_Opened,DEF_VoiceSegmentEndFlag};
 113          code uint8_t VoiceStr_PickAlarmClosed[] = {VOICE_AntiSkidAlarm,VOICE_Closed,DEF_VoiceSegmentEndFlag};
 114            
 115          code uint8_t RestoreFactoryDefaultVoiceBuff[][4]={  
 116            {VOICE_PressPoundKey,VOICE_Confirm,VOICE_RestoreFactoryDefault,DEF_VoiceSegmentEndFlag},
 117            {VOICE_PressAsteriskKey,VOICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag}
 118          };
 119            
 120          
 121          code uint8_t ConfirmDeleteVoiceBuff[]={VOICE_PressPoundKey,VOICE_ConfirmToDelete,VOICE_PressAsteriskKey,VO
             -ICE_ReturnPreviousMenu,DEF_VoiceSegmentEndFlag};
 122          
 123          code uint8_t SystemVersionVoiceBuff[][8]={
 124            SystemHardwareVersion,
 125            SystemFirmwareVersion
 126          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    304    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
