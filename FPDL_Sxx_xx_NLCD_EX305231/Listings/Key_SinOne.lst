C51 COMPILER V9.60.0.0   KEY_SINONE                                                        05/23/2023 14:43:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY_SINONE
OBJECT MODULE PLACED IN .\Objects\Key_SinOne.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Drivers\Protocol\Key_SinOne.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR
                    -(.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;
                    -.\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tuya
                    -) DEBUG PRINT(.\Listings\Key_SinOne.lst) TABS(2) OBJECT(.\Objects\Key_SinOne.obj)

line level    source

   1          #include "KeyScan.h"
   2          #include "SensorMethod.h"
   3          #include "Project.h"
   4          
   5          uint8_t TouchKeyBuff[4]={0};
   6          
   7          #if (defined ProjectIs_BarLock_S6421) || (defined ProjectIs_BarLock_S6421v2)  \
   8           || (defined ProjectIs_BarLock_S6428) || (defined ProjectIs_BarLock_S6428v2)  \
   9           || (defined ProjectIs_BarLock_S6430) 
              uint16_t ValidKeyValue[]={0x0400,0x8000,0x0008,0x0004,0x4000,0x0010,0x0040,0x2000,0x0020,0x0080,0x1000,0x0
             -100,0x0000};//0 1 2 3 4 5 6 7 8 9 * # 
              
              #elif defined ProjectIs_BarLock_S6904 || defined ProjectIs_BarLock_S6904v2  \
              || defined ProjectIs_BarLock_S4914
              uint16_t ValidKeyValue[]={0x0008,0x0100,0x0400,0x1000,0x0080,0x0020,0x2000,0x0040,0x0010,0x4000,0x0004,0x8
             -000,0x0002};//0 1 2 3 4 5 6 7 8 9 * # bell
              
              #elif defined ProjectIs_BarLock_S6117 || defined ProjectIs_BarLock_S6117v2
              uint16_t ValidKeyValue[]={0x0040,0x4000,0x8000,0x0004,0x2000,0x1000,0x0008,0x0100,0x0400,0x0010,0x0080,0x0
             -020,0x0000};//0 1 2 3 4 5 6 7 8 9 * #
              
              #elif defined ProjectIs_BarLock_S1734 || defined ProjectIs_BarLock_S8106  \
                 || defined ProjectIs_BarLock_S1735 || defined ProjectIs_BarLock_S7203  \
                 || defined ProjectIs_BarLock_S1736 
              uint16_t ValidKeyValue[]={0x0080,0x0020,0x0400,0x1000,0x0010,0x0100,0x2000,0x0008,0x0040,0x4000,0x0004,0x8
             -000,0x0000};//0 1 2 3 4 5 6 7 8 9 * # 
              
              #elif defined ProjectIs_BarLock_S7702 || defined ProjectIs_BarLock_S7705
              uint16_t ValidKeyValue[]={0x0004,0x0020,0x0400,0x1000,0x0040,0x0080,0x2000,0x0010,0x0100,0x4000,0x0008,0x8
             -000,0x0000};//0 1 2 3 4 5 6 7 8 9 * #
              
              #elif defined ProjectIs_BarLock_S0607
              uint16_t ValidKeyValue[]={0x0080,0x8000,0x0400,0x0004,0x4000,0x2000,0x0008,0x1000,0x0040,0x0010,0x0100,0x0
             -020,0x0000};//0 1 2 3 4 5 6 7 8 9 * #
              
              #elif defined ProjectIs_BarLock_S9901
              uint16_t ValidKeyValue[]={0x0400,0x8000,0x0008,0x0004,0x4000,0x0020,0x0010,0x2000,0x0040,0x0080,0x1000,0x0
             -100,0x0000};
              
              #elif defined ProjectIs_BarLock_S9022
  34          uint16_t ValidKeyValue[]={KeyValueTK3,KeyValueTK8,KeyValueTK10,KeyValueTK12,KeyValueTK7,KeyValueTK5,  //0 1
             - 2 3 4 5
  35          KeyValueTK13,KeyValueTK6,KeyValueTK4,KeyValueTK14,KeyValueTK2,KeyValueTK15,KeyValueTK1};    //6 7 8 9 * # be
             -ll
  36          
  37          #elif defined ProjectIs_BarLock_S3008
              uint16_t ValidKeyValue[]={0x1000,0x0040,0x0004,0x0008,0x8000,0x0020,0x0010,0x4000,0x0080,0x0100,0x2000,0x0
             -400,0x0000};//0 1 2 3 4 5 6 7 8 9 * #
              
              #endif
  41          
  42          uint32_t KeyScanDrive()
C51 COMPILER V9.60.0.0   KEY_SINONE                                                        05/23/2023 14:43:18 PAGE 2   

  43          {
  44   1        uint32_t TK_Value;
  45   1        //uint32_t TK_ValueBuff;
  46   1        uint8_t i;
  47   1        
  48   1        if( SOCAPI_TouchKeyStatus & 0x40 )  // bit6-半轮扫描完成标志  1:完成  0：未完成
  49   1        {
  50   2          SOCAPI_TouchKeyStatus &= 0xBF;  //清半轮扫描标志位
  51   2          TouchKeyRestart();
  52   2        }
  53   1        else
  54   1        {
  55   2          if( SOCAPI_TouchKeyStatus & 0x80 )  //bit7-一轮扫描完成标志  1:完成   0：未完成
  56   2          {
  57   3            TK_Value = TouchKeyScan();
  58   3            //TK_ValueBuff = TK_Value;
  59   3            SOCAPI_TouchKeyStatus &= 0x7F;    //清一轮扫描标志位
  60   3            for(i=0; i<4; i++)
  61   3            {
  62   4              TouchKeyBuff[i] = TK_Value >> (24-(8*i));
  63   4            }
  64   3            TouchKeyRestart();
  65   3          }
  66   2        }
  67   1        return TK_Value;
  68   1      }
  69          
  70          void KeyPressedJudge(uint32_t InputKeyValue)
  71          {
  72   1        uint16_t InputValidKeyValue;
  73   1        uint8_t i;
  74   1        uint8_t TK_Flag;
  75   1        
  76   1        InputValidKeyValue = InputKeyValue;
  77   1        
  78   1      
  79   1        
  80   1        for(i=0;i<13;i++)//最多有可能有13个键
  81   1        {
  82   2          TK_Flag = 0;
  83   2          if( (InputValidKeyValue & ValidKeyValue[i]) > 0 )
  84   2          {
  85   3            TK_Flag = 1;
  86   3          }
  87   2          switch(i)
  88   2          {
  89   3            case 0:
  90   3              if( TK_Flag )
  91   3              {
  92   4                TouchKeyStatus.KEY_ZERO_Pressed = bTRUE;
  93   4              }
  94   3              else
  95   3              {
  96   4                TouchKeyStatus.KEY_ZERO_Pressed = bFALSE;
  97   4              }
  98   3              break;
  99   3                
 100   3            case 1:
 101   3              if( TK_Flag )
 102   3              {
 103   4                TouchKeyStatus.KEY_ONE_Pressed = bTRUE;
 104   4              }
C51 COMPILER V9.60.0.0   KEY_SINONE                                                        05/23/2023 14:43:18 PAGE 3   

 105   3              else
 106   3              {
 107   4                TouchKeyStatus.KEY_ONE_Pressed = bFALSE;
 108   4              }
 109   3              break;
 110   3                
 111   3            case 2:
 112   3              if( TK_Flag )
 113   3              {
 114   4                TouchKeyStatus.KEY_TWO_Pressed = bTRUE;
 115   4              }
 116   3              else
 117   3              {
 118   4                TouchKeyStatus.KEY_TWO_Pressed = bFALSE;
 119   4              }
 120   3              break;
 121   3                
 122   3            case 3:
 123   3              if( TK_Flag )
 124   3              {
 125   4                TouchKeyStatus.KEY_THREE_Pressed = bTRUE;
 126   4              }
 127   3              else
 128   3              {
 129   4                TouchKeyStatus.KEY_THREE_Pressed = bFALSE;
 130   4              }
 131   3              break;
 132   3                
 133   3            case 4:
 134   3              if( TK_Flag )
 135   3              {
 136   4                TouchKeyStatus.KEY_FOUR_Pressed = bTRUE;
 137   4              }
 138   3              else
 139   3              {
 140   4                TouchKeyStatus.KEY_FOUR_Pressed = bFALSE;
 141   4              }
 142   3              break;
 143   3                
 144   3            case 5:
 145   3              if( TK_Flag )
 146   3              {
 147   4                TouchKeyStatus.KEY_FIVE_Pressed = bTRUE;
 148   4              }
 149   3              else
 150   3              {
 151   4                TouchKeyStatus.KEY_FIVE_Pressed = bFALSE;
 152   4              }
 153   3              break;
 154   3                
 155   3            case 6:
 156   3              if( TK_Flag )
 157   3              {
 158   4                TouchKeyStatus.KEY_SIX_Pressed = bTRUE;
 159   4              }
 160   3              else
 161   3              {
 162   4                TouchKeyStatus.KEY_SIX_Pressed = bFALSE;
 163   4              }
 164   3              break;
 165   3                
 166   3            case 7:
C51 COMPILER V9.60.0.0   KEY_SINONE                                                        05/23/2023 14:43:18 PAGE 4   

 167   3              if( TK_Flag )
 168   3              {
 169   4                TouchKeyStatus.KEY_SEVEN_Pressed = bTRUE;
 170   4              }
 171   3              else
 172   3              {
 173   4                TouchKeyStatus.KEY_SEVEN_Pressed = bFALSE;
 174   4              }
 175   3              break;
 176   3                
 177   3            case 8:
 178   3              if( TK_Flag )
 179   3              {
 180   4                TouchKeyStatus.KEY_EIGHT_Pressed = bTRUE;
 181   4              }
 182   3              else
 183   3              {
 184   4                TouchKeyStatus.KEY_EIGHT_Pressed = bFALSE;
 185   4              }
 186   3              break;
 187   3                
 188   3            case 9:
 189   3              if( TK_Flag )
 190   3              {
 191   4                TouchKeyStatus.KEY_NINE_Pressed = bTRUE;
 192   4              }
 193   3              else
 194   3              {
 195   4                TouchKeyStatus.KEY_NINE_Pressed = bFALSE;
 196   4              }
 197   3              break;
 198   3                
 199   3            case 10:
 200   3              if( TK_Flag )
 201   3              {
 202   4                TouchKeyStatus.KEY_ASTERISK_Pressed = bTRUE;
 203   4              }
 204   3              else
 205   3              {
 206   4                TouchKeyStatus.KEY_ASTERISK_Pressed = bFALSE;
 207   4              }
 208   3              break;
 209   3                
 210   3            case 11:
 211   3              if( TK_Flag )
 212   3              {
 213   4                TouchKeyStatus.KEY_POUNDSIGN_Pressed = bTRUE;
 214   4              }
 215   3              else
 216   3              {
 217   4                TouchKeyStatus.KEY_POUNDSIGN_Pressed = bFALSE;
 218   4              }
 219   3              break;
 220   3              
 221   3            case 12:
 222   3              if( TK_Flag )
 223   3              {
 224   4                TouchKeyStatus.KEY_DOORBELL_Pressed = bTRUE;
 225   4              }
 226   3              else
 227   3              {
 228   4                TouchKeyStatus.KEY_DOORBELL_Pressed = bFALSE;
C51 COMPILER V9.60.0.0   KEY_SINONE                                                        05/23/2023 14:43:18 PAGE 5   

 229   4              }
 230   3              break;
 231   3      
 232   3            default:
 233   3              break;
 234   3          }
 235   2        }
 236   1      }
 237          
 238          void Touch_Init(void)
 239          {
 240   1        TouchKeyInit();
 241   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     30       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
