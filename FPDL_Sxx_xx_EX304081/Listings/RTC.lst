C51 COMPILER V9.60.0.0   RTC                                                               04/19/2023 14:20:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN .\Objects\RTC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\ModuleLogic\RTC.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.
                    -\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.\
                    -Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic) DEBUG PRINT(.\Listings\RTC.lst) TABS(2) OBJECT(.\Object
                    -s\RTC.obj)

line level    source

   1          #include "RTC.h"
   2          #include "Project.h"
   3          #include "global_variable.h"
   4          
   5          #define SECPerDay  86400
   6          code uint8_t DayOfMon[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
   7          
   8          uint8_t BCD_to_Hex(uint8_t num)
   9          {
  10   1        return (num>>4)*10+(num&0x0f);
  11   1      }
  12          
  13          uint8_t Hex_to_BCD(uint8_t num)
  14          {
  15   1        return ((num/10)<<4)+(num%10);
  16   1      }
  17          
  18          uint32_t SystemTimeToUTC(systemtime_t Time)
  19          {
  20   1        uint32_t Sec_Today = 0;
  21   1        uint32_t Day_Total = 0;
  22   1        uint16_t year = BCD_to_Hex(Time.year)+2000;
  23   1        uint8_t j;
  24   1        uint16_t day_at_month;
  25   1        while(year > 2000)
  26   1        {
  27   2          if((((year-1)%4==0)&&((year-1)%100!=0)) || ((year-1)%400==0)) 
  28   2          {
  29   3             Day_Total +=366;
  30   3             year--;
  31   3          }
  32   2          else
  33   2          {
  34   3            Day_Total +=365;
  35   3             year--;
  36   3          }
  37   2        }
  38   1        year = BCD_to_Hex(Time.year)+2000;
  39   1        for(j=0;j<12;j++)     /* ?????・? */
  40   1        {
  41   2          if((j==1) && (((year%4==0)&&(year%100!=0)) || (year%400==0)))//闰年2月29天
  42   2            day_at_month = 29;
  43   2          else
  44   2            day_at_month = DayOfMon[j];
  45   2          
  46   2          if(BCD_to_Hex(SystemTime.month)-1 > j) 
  47   2          {
  48   3            Day_Total += day_at_month;
  49   3          }
  50   2          else 
  51   2          {
  52   3            Day_Total += BCD_to_Hex(SystemTime.date);
C51 COMPILER V9.60.0.0   RTC                                                               04/19/2023 14:20:23 PAGE 2   

  53   3            Day_Total -= 1;
  54   3            break;
  55   3          }
  56   2        }
  57   1        Sec_Today = (uint32_t)BCD_to_Hex( Time.hour)*3600+(uint32_t)BCD_to_Hex( Time.minute)*60+(uint32_t)BCD_to_
             -Hex( Time.second);
  58   1        Sec_Today+=Day_Total*SECPerDay;
  59   1        return Sec_Today;
  60   1      }
  61          
  62          systemtime_t UTCToSystemtime(uint32_t UTC)
  63          {
  64   1        uint32_t DayToNow = UTC/SECPerDay;
  65   1        uint32_t SecOutOfDay = UTC%SECPerDay;
  66   1        uint16_t year = 2000;
  67   1        systemtime_t TimeResult;
  68   1        uint16_t day_at_month;
  69   1        uint8_t j;
  70   1        while(DayToNow > 365)
  71   1        {
  72   2          if(((year%4==0)&&(year%100!=0)) || (year%400==0))    /* ???? */
  73   2            DayToNow -= 366;
  74   2          else
  75   2            DayToNow -= 365;
  76   2          year++;
  77   2        }
  78   1         if((DayToNow == 365) && !(((year%4==0)&&(year%100!=0)) || (year%400==0)))//正好最后一天而且不是闰年
  79   1        {
  80   2          DayToNow -= 365;
  81   2          year++;
  82   2        }
  83   1        TimeResult.year =Hex_to_BCD((uint8_t)year-2000);
  84   1        
  85   1        for(j=0;j<12;j++)     /* ?????・? */
  86   1        {
  87   2          if((j==1) && (((year%4==0)&&(year%100!=0)) || (year%400==0)))//闰年2月29天
  88   2            day_at_month = 29;
  89   2          else
  90   2            day_at_month = DayOfMon[j];
  91   2          
  92   2          if(DayToNow >= day_at_month) 
  93   2            DayToNow -= day_at_month;
  94   2          else 
  95   2            break;
  96   2        }
  97   1        TimeResult.month =   Hex_to_BCD(j+1);
  98   1        TimeResult.date   =  Hex_to_BCD(DayToNow+1);
  99   1        TimeResult.hour =    Hex_to_BCD(((SecOutOfDay/ 3600))%24);
 100   1        TimeResult.minute  = Hex_to_BCD((SecOutOfDay % 3600)/60);
 101   1        TimeResult.second  = Hex_to_BCD((SecOutOfDay % 3600)%60);
 102   1        return TimeResult;
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1054    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.0.0   RTC                                                               04/19/2023 14:20:23 PAGE 3   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
