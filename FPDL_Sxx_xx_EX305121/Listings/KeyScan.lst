C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/12/2023 14:12:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Objects\KeyScan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\ModuleLogic\KeyScan.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCD
                    -IR(.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protoco
                    -l;.\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic) DEBUG PRINT(.\Listings\KeyScan.lst) TABS(2) OBJECT(
                    -.\Objects\KeyScan.obj)

line level    source

   1          #include "IO.h"
   2          #include "KeyScan.h"
   3          #include "global_variable.h"
   4          #include "Key_SinOne.h"
   5          
   6          #define Def_KeyHoldTimeLimited 96     //1.5s
   7          #define Def_KeyHoldLongTimeLimited  192   //3s
   8          
   9          keycode_t NewKeycode,LastKeycode;
  10          uint16_t KeyHoldTimeCnt=0;
  11          uint8_t KEYSCANTIMECNT=0;
  12          extern bit KeyJustWakeUp;
  13          
  14          TouchKeyStatus_t TouchKeyStatus;
  15          
  16          void Key_Init(void)
  17          {
  18   1        TouchKeyStatus.KEY_ZERO_Pressed = bFALSE;
  19   1        TouchKeyStatus.KEY_ONE_Pressed = bFALSE;
  20   1        TouchKeyStatus.KEY_TWO_Pressed = bFALSE;
  21   1        TouchKeyStatus.KEY_THREE_Pressed = bFALSE;
  22   1        TouchKeyStatus.KEY_FOUR_Pressed = bFALSE;
  23   1        TouchKeyStatus.KEY_FIVE_Pressed = bFALSE;
  24   1        TouchKeyStatus.KEY_SIX_Pressed = bFALSE;
  25   1        TouchKeyStatus.KEY_SEVEN_Pressed = bFALSE;
  26   1        TouchKeyStatus.KEY_EIGHT_Pressed = bFALSE;
  27   1        TouchKeyStatus.KEY_NINE_Pressed = bFALSE;
  28   1        TouchKeyStatus.KEY_POUNDSIGN_Pressed = bFALSE;
  29   1        TouchKeyStatus.KEY_ASTERISK_Pressed = bFALSE;
  30   1        //TouchKeyStatus.KEY_DOORCLOSE_Pressed = bFALSE;
  31   1        TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  32   1        AwakeSystemKeyMgr.IsDoorBellKeyAwake = bFALSE;
  33   1        AwakeSystemKeyMgr.IsPoundsignKeyAwake = bFALSE;
  34   1      }
  35          
  36          keycode_t Key_Scan(void)
  37          {
  38   1        uint32_t key_value,temp;
  39   1        
  40   1        keycode_t PostKeycode;
  41   1        
  42   1        key_value = KeyScanDrive();
  43   1        
  44   1        if(key_value!=0)
  45   1        {
  46   2          temp = key_value;
  47   2        }
  48   1        
  49   1        if (SystemPowerMgr.AwakeTimerCnt < 32 )
  50   1        {
  51   2          return KEY_NONE;
  52   2        }
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/12/2023 14:12:15 PAGE 2   

  53   1        
  54   1        if( KeyJustWakeUp == 1 )
  55   1        {
  56   2          if( key_value == 0 )
  57   2          {
  58   3            KeyJustWakeUp = 0;
  59   3          }
  60   2          return KEY_NONE;
  61   2        }
  62   1      
  63   1        KeyPressedJudge(key_value);
  64   1      
  65   1        if ( PINMACRO_ONBOARD_BUTTON_STATUS == 0 )
  66   1        {
  67   2          DEBUG_MARK;
  68   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
  69   2        }
  70   1        #ifdef INSIDEBUTTONINTOMAINMENU
                else if (SystemPowerMgr.AwakeSource == SystemResetKey)    
                  {
                      TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
                      SystemPowerMgr.AwakeSource = DoNotCare; 
                      //CurrentScreen = SCREEN_ManagerIdentify;
                      //ManagerIdentifyMgr.Status = StartManagerIdentify;
                  }
                #endif
  79   1        else{
  80   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  81   2        }
  82   1      
  83   1          
  84   1        if ( (TouchKeyStatus.KEY_ZERO_Pressed == bTRUE )&&(LastKeycode == KEY_ZERO)){
  85   2          NewKeycode = KEY_ZERO;
  86   2        }
  87   1        else if ( (TouchKeyStatus.KEY_ONE_Pressed == bTRUE )&&(LastKeycode == KEY_ONE)){
  88   2          NewKeycode = KEY_ONE;
  89   2        }
  90   1        else if ( (TouchKeyStatus.KEY_TWO_Pressed == bTRUE )&&(LastKeycode == KEY_TWO)){
  91   2          NewKeycode = KEY_TWO;
  92   2        }
  93   1        else if ( (TouchKeyStatus.KEY_THREE_Pressed == bTRUE )&&(LastKeycode == KEY_THREE)){
  94   2          NewKeycode = KEY_THREE;
  95   2        }
  96   1        else if ( (TouchKeyStatus.KEY_FOUR_Pressed == bTRUE )&&(LastKeycode == KEY_FOUR)){
  97   2          NewKeycode = KEY_FOUR;
  98   2        }
  99   1        else if ( (TouchKeyStatus.KEY_FIVE_Pressed == bTRUE )&&(LastKeycode == KEY_FIVE)){
 100   2          NewKeycode = KEY_FIVE;
 101   2        }
 102   1        else if ( (TouchKeyStatus.KEY_SIX_Pressed == bTRUE )&&(LastKeycode == KEY_SIX)){
 103   2          NewKeycode = KEY_SIX;
 104   2        }
 105   1        else if ( (TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE )&&(LastKeycode == KEY_SEVEN)){
 106   2          NewKeycode = KEY_SEVEN;
 107   2        }
 108   1        else if ( (TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE )&&(LastKeycode == KEY_EIGHT)){
 109   2          NewKeycode = KEY_EIGHT;
 110   2        }
 111   1        else if ( (TouchKeyStatus.KEY_NINE_Pressed == bTRUE )&&(LastKeycode == KEY_NINE)){
 112   2          NewKeycode = KEY_NINE;
 113   2        }
 114   1        else if ( (TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE )&&(LastKeycode == KEY_POUNDSIGN)){
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/12/2023 14:12:15 PAGE 3   

 115   2          NewKeycode = KEY_POUNDSIGN;
 116   2        }
 117   1        else if ( (TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE )&&(LastKeycode == KEY_ASTERISK)){
 118   2          NewKeycode = KEY_ASTERISK;
 119   2        }
 120   1        else if ( (TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE )&&(LastKeycode == KEY_INSIDEBUTTON)){
 121   2          NewKeycode = KEY_INSIDEBUTTON;
 122   2        }
 123   1      //  else if ((TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )&&(LastKeycode == KEY_DOORBELL))
 124   1      //  {
 125   1      //    NewKeycode = KEY_DOORBELL;
 126   1      //    DEBUG_MARK;
 127   1      //  }
 128   1        
 129   1        else if ( TouchKeyStatus.KEY_ZERO_Pressed == bTRUE ){
 130   2          NewKeycode = KEY_ZERO;
 131   2        }
 132   1        else if ( TouchKeyStatus.KEY_ONE_Pressed == bTRUE ){
 133   2          NewKeycode = KEY_ONE;
 134   2        }
 135   1        else if ( TouchKeyStatus.KEY_TWO_Pressed == bTRUE ){
 136   2          NewKeycode = KEY_TWO;
 137   2        }
 138   1        else if ( TouchKeyStatus.KEY_THREE_Pressed == bTRUE ){
 139   2          NewKeycode = KEY_THREE;
 140   2        }
 141   1        else if ( TouchKeyStatus.KEY_FOUR_Pressed == bTRUE ){
 142   2          NewKeycode = KEY_FOUR;
 143   2        }
 144   1        else if ( TouchKeyStatus.KEY_FIVE_Pressed == bTRUE ){
 145   2          NewKeycode = KEY_FIVE;
 146   2        }
 147   1        else if ( TouchKeyStatus.KEY_SIX_Pressed == bTRUE ){
 148   2          NewKeycode = KEY_SIX;
 149   2        }
 150   1        else if ( TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE ){
 151   2          NewKeycode = KEY_SEVEN;
 152   2        }
 153   1        else if ( TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE ){
 154   2          NewKeycode = KEY_EIGHT;
 155   2        }
 156   1        else if ( TouchKeyStatus.KEY_NINE_Pressed == bTRUE ){
 157   2          NewKeycode = KEY_NINE;
 158   2        }
 159   1        else if ( TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE ){
 160   2          NewKeycode = KEY_POUNDSIGN;
 161   2        }
 162   1        else if ( TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE ){
 163   2          NewKeycode = KEY_ASTERISK;
 164   2        }
 165   1        else if ( TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE ){
 166   2          NewKeycode = KEY_INSIDEBUTTON;
 167   2        }
 168   1      //  else if (TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )
 169   1      //  {
 170   1      //    NewKeycode = KEY_DOORBELL;
 171   1      //  }
 172   1        
 173   1        else {
 174   2          NewKeycode = KEY_NONE;
 175   2        } 
 176   1      
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/12/2023 14:12:15 PAGE 4   

 177   1        LEDsMgr.Keycode = NewKeycode;
 178   1      
 179   1        if ( NewKeycode != KEY_NONE )
 180   1        {
 181   2          if ( NewKeycode !=LastKeycode )
 182   2          {
 183   3            if (NewKeycode != KEY_INSIDEBUTTON)
 184   3            {
 185   4              PostKeycode = NewKeycode;
 186   4            }
 187   3            else{
 188   4              PostKeycode = KEY_NONE; 
 189   4              DEBUG_MARK;
 190   4            }
 191   3            LastKeycode = NewKeycode;
 192   3            KeyHoldTimeCnt=0;
 193   3          }
 194   2          else
 195   2          {
 196   3            if ( KeyHoldTimeCnt <= Def_KeyHoldLongTimeLimited )
 197   3            {
 198   4              KeyHoldTimeCnt++;
 199   4              PostKeycode = KEY_NONE;     
 200   4            }
 201   3      
 202   3            if ( KeyHoldTimeCnt > Def_KeyHoldTimeLimited )
 203   3            {
 204   4              if ((KeyHoldTimeCnt >= Def_KeyHoldLongTimeLimited )&&( NewKeycode == KEY_INSIDEBUTTON))
 205   4              {
 206   5                PostKeycode = KEY_INSIDEBUTTON_HOLD_LONG;       
 207   5              }
 208   4              else{
 209   5                PostKeycode = KEY_NONE;
 210   5              }
 211   4              
 212   4              if ( ++KEYSCANTIMECNT > 127 ){
 213   5                KEYSCANTIMECNT=0;
 214   5              }
 215   4            }
 216   3            else{
 217   4              PostKeycode = KEY_NONE;
 218   4            }
 219   3          }
 220   2        }
 221   1        else
 222   1        {
 223   2          if (LastKeycode == KEY_INSIDEBUTTON){
 224   3            PostKeycode = LastKeycode;
 225   3          }
 226   2          else{
 227   3            PostKeycode = KEY_NONE; 
 228   3          }
 229   2          LastKeycode = NewKeycode;
 230   2          KeyHoldTimeCnt=0;
 231   2        }
 232   1      
 233   1        DEBUG_MARK;
 234   1      
 235   1        return PostKeycode;
 236   1      
 237   1      }
 238          
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/12/2023 14:12:15 PAGE 5   

 239          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    800    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
