C51 COMPILER V9.60.0.0   MAIN                                                              05/12/2023 14:12:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\Application\main.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(
                    -.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.
                    -\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic) DEBUG PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Obje
                    -cts\main.obj)

line level    source

   1          #include "i2c.h"
   2          #include "usart.h"
   3          #include "spi.h"
   4          #include "tim.h"
   5          #include "IO.h"
   6          #include "LCD_HFG12864.h"
   7          #include <string.h>
   8          #include "RTC_PCF8563.h"
   9          #include "RTC.h"
  10          #include "adc.h"
  11          #include "BeepMgr.h"
  12          #include "Key_SinOne.h"
  13          #include "MFC_WS1850.h"
  14          #include "GUI_Function.h"
  15          #include "Basic_Function.h"
  16          #include "Flash.h"
  17          #include "FingerPrint.h"
  18          #include "LEDsMgr.h"
  19          #include "Motor.h"
  20          #include "Battery.h"
  21          #include "HallSlide.h"
  22          #include "Log.h"
  23          #include "LowPower.h"
  24          #include "FP.h"
  25          #include "GUI.h"
  26          
  27          /**************************************************************
  28          说明：
  29          ***************************************************************/
  30          uint8_t ReadRTC = 0;
  31          
  32          //uint8_t system_IC_busy_Flag = 0;
  33          void Main_System_Init(void)
  34          {
  35   1        EnableWDT();
  36   1        MX_GPIO_Init();
  37   1        SET_MFC_RST_H;
  38   1        MX_ADC1_Init();
  39   1        MX_TIM_Init();
  40   1        MX_SPI0_Init();
  41   1        MX_UART2_Init();
  42   1        FPcmd_Init();
  43   1        MX_I2C_Init();
  44   1        SET_POWER_ON;  
  45   1        #ifndef Function_USE_Internal_RTC
  46   1        //PCF8563_Init();
  47   1      //  Hardware_DelayMs(10);
  48   1        #endif  
  49   1        FPMpowerMgr.Status = FPMpowerOn;
  50   1        VOICE_Init();
  51   1        MFC_Init();
  52   1        Hardware_DelayMs(10);
C51 COMPILER V9.60.0.0   MAIN                                                              05/12/2023 14:12:17 PAGE 2   

  53   1        Touch_Init();
  54   1        Hardware_DelayMs(10);
  55   1        SystemTime.year   =   0x20;
  56   1        SystemTime.month  =   1;
  57   1        SystemTime.date   =   1;
  58   1        SystemTime.day    =   3;
  59   1        SystemTime.hour     =   0x00;
  60   1        SystemTime.minute   =   0x00;
  61   1        SystemTime.second   =   0;
  62   1        #ifdef Function_USE_Internal_RTC
                G_SystemUTCTime = SystemTimeToUTC(SystemTime);
                #else
  65   1        PCF8563_WriteTime();
  66   1        #endif
  67   1        GUI_Init();
  68   1        
  69   1        SafetyMonitorMgr.FpIdentifyFailedTimes = 0;
  70   1        SafetyMonitorMgr.CardIdentifyFailedTimes = 0;
  71   1        SafetyMonitorMgr.PasscodeIdentifyFailedTimes = 0;
  72   1        SafetyMonitorMgr.ManagerPasscodeIdentifyFailedTimes = 0;
  73   1        SafetyMonitorMgr.SystemLocked = bFALSE;
  74   1        UserIdentifyResultMgr.FlagContinuedOpenEnabled = bFALSE;
  75   1        
  76   1        /* Configure The Touch*/
  77   1        LogMgr_Init();
  78   1        /* Configure The Motor*/
  79   1        Hardware_MotorMgr_Init();
  80   1        
  81   1        CurrentScreen = SCREEN_Initialization;
  82   1        InitializationMgr.Status = StartInitialization;
  83   1        BatteryMgr.ProtectVoltageTriggerTimes = 0;
  84   1        BatteryMgr.LowBatteryProtectionEnabled = bFALSE;
  85   1        BatteryMgr.BatteryVoltage = 0;
  86   1        VoiceMgr.volume = 20; // default volume
  87   1        SET_VOLUME(VoiceMgr.volume);
  88   1        
  89   1        AntiPryingMgr.AntiPryingTrigger = bFALSE;
  90   1        AntiPryingMgr.AntiPryingSignalRelease = bFALSE; 
  91   1        #ifdef Function_HallSlideCover
                HallSlideCover_Init();
                #endif
  94   1        RefreshSystemSleepTime();
  95   1      }
  96          void main(void)
  97          {
  98   1        uint8_t i;
  99   1        
 100   1        FLASH_OB_Config();      //v121和中微有差异
 101   1        Main_System_Init();
 102   1        
 103   1        for (i = 0; i < 50; i++) 
 104   1        {
 105   2            Hardware_Task_Analog();
 106   2            HardwareBatteryMgr_Task();
 107   2        } //更新50次ADC
 108   1        #ifdef Function_FPMbreathingLed
 109   1        SetFPMbreathingLed(FPMbreathingLed_Bule);
 110   1        #endif
 111   1        Hardware_MotorMgr_Init(); //电机初始化
 112   1        
 113   1        
 114   1        while (1)
C51 COMPILER V9.60.0.0   MAIN                                                              05/12/2023 14:12:17 PAGE 3   

 115   1        {
 116   2          if ( G_tflagbits.T1024Hz == 1 )
 117   2          {
 118   3            G_tflagbits.T1024Hz =0;
 119   3          }
 120   2      
 121   2          if ( G_tflagbits.T256Hz == 1 )
 122   2          {
 123   3            G_tflagbits.T256Hz =0;      
 124   3          }
 125   2          
 126   2          if ( G_tflagbits.T64Hz == 1 )
 127   2          {
 128   3            G_tflagbits.T64Hz = 0;
 129   3        
 130   3            FPM_Mgr_Task();
 131   3      
 132   3            GUI_Task();
 133   3            
 134   3            Hardware_MotorMgr_Task(); 
 135   3      
 136   3            #if (defined ProjectIs_BarLock_S6902)
                    LEDsMgr_Task();
                    #endif
 139   3      
 140   3            if ( SystemPowerMgr.SleepDelayTimerCnt > 0 )
 141   3            {
 142   4              SystemPowerMgr.SleepDelayTimerCnt--;
 143   4            }
 144   3            
 145   3            if (SystemPowerMgr.AwakeTimerCnt < 60)
 146   3            {
 147   4              SystemPowerMgr.AwakeTimerCnt++;
 148   4            }
 149   3            #ifdef Function_HallSlideCover
                    HallSleep_Task();
                    #endif
 152   3            if (( MotorMgr.MotorStatus == IDLE )
 153   3              //&&( PINMACRO_KB_IRQ_STATUS != 0x00 )   
 154   3              &&( CurrentScreen != SCREEN_Initialization )
 155   3              &&( CurrentScreen != SCREEN_PickLockAlarm )
 156   3              &&( CurrentScreen != SCREEN_SystemLocked )
 157   3              &&( CurrentScreen != SCREEN_AgingTest )
 158   3      //        &&(CurrentScreen != SCREEN_SelfTest)
 159   3              &&((SystemPowerMgr.SleepDelayTimerCnt == 0x0000)  
 160   3                ) //casing closed
 161   3              )
 162   3            {
 163   4              System_PowerDown();
 164   4              System_Awake();
 165   4              CLRWDT();
 166   4              RefreshSystemSleepTime();
 167   4              SystemPowerMgr.AwakeTimerCnt=0x0000;
 168   4            }
 169   3          } 
 170   2      //    if ( G_tflagbits.T16Hz == 1 )
 171   2      //    {
 172   2      //      
 173   2      //    }
 174   2          
 175   2          if ( G_tflagbits.T8Hz == 1 )
 176   2          {
C51 COMPILER V9.60.0.0   MAIN                                                              05/12/2023 14:12:17 PAGE 4   

 177   3            G_tflagbits.T8Hz =0;
 178   3            CLRWDT();
 179   3            #ifdef Function_ScreenDisplay
 180   3            //if(system_IC_busy_Flag == 0)
 181   3            {
 182   4              for(i=0;i<8;i++)
 183   4              { 
 184   5                Display_Task();
 185   5              }
 186   4            }
 187   3            #endif  
 188   3          }
 189   2      
 190   2          if ( G_tflagbits.T2Hz == 1 )
 191   2          {
 192   3            G_tflagbits.T2Hz =0;  
 193   3          }
 194   2          
 195   2          if ( G_tflagbits.T1Hz == 1 )
 196   2          {
 197   3            G_tflagbits.T1Hz =0;
 198   3            //SystemTimeUpdate();   
 199   3      
 200   3            //EEPROM_TESTING();
 201   3      
 202   3            //MFC_Test();
 203   3            //Flash_Test();
 204   3            //AppUnlockTest();
 205   3            #ifdef Function_USE_Internal_RTC
                    SystemTime = UTCToSystemtime(G_SystemUTCTime);
                    #else
 208   3            if( ReadRTC == 0 )
 209   3            {
 210   4              PCF8563_ReadTime();
 211   4            }
 212   3            ReadRTC += 1;
 213   3            if(ReadRTC >= 5)
 214   3            ReadRTC = 0;
 215   3            #endif
 216   3            DEBUG_MARK;
 217   3            
 218   3          }
 219   2        }
 220   1      }
 221          
 222          
 223          
 224          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    465    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              05/12/2023 14:12:17 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
