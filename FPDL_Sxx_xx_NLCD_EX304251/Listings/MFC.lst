C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MFC
OBJECT MODULE PLACED IN .\Objects\MFC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\ModuleLogic\MFC.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.
                    -\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.\
                    -Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tuya) 
                    -DEBUG PRINT(.\Listings\MFC.lst) TABS(2) OBJECT(.\Objects\MFC.obj)

line level    source

   1          #include "MFC.h"
   2          #include "GUI_Function.h"
   3          #include "Project.h"
   4          #include "LCD.h"
   5          #include "Font_Menu.h"
   6          #include "Log.h"
   7          #include "global_variable.h"
   8          #include "Basic_Function.h"
   9          
  10          #include "EEPROM.h"
  11          #include "BeepMgr.h"
  12          #include "MFC_WS1850.h"
  13          #include "yc_nfc_contactless_l1.h"
  14          
  15          extern DataInputMgr_t DataInputMgr;
  16          
  17          #define Def_UserSwingCardTimeDelay  Def_GuiTimeDelayCnt5s
  18          
  19          void ReadCardUserMemoryFromEEPROM(void)//从EEPROM读取卡片用户
  20          {
  21   1        EEPROM_ReadSequential(CardUserMemoryStartAddr,&CardMemoryMgr[0].UserID,(6*DEF_MAX_CARDUSER));
  22   1      }
  23          
  24          void WriteCardUserMemoryToEEPROM(void)//向EEPROM写入卡片用户
  25          {
  26   1        EEPROM_WriteSequential(CardUserMemoryStartAddr,&CardMemoryMgr[0].UserID,(6*DEF_MAX_CARDUSER));
  27   1      }
  28          
  29          void CardUserIdentify(void)//卡片用户认证
  30          {
  31   1        status_t GetCardID;
  32   1        uint8_t UserID;
  33   1        if (CardIdentifyMgr.Status == ReadingCardID)
  34   1        {
  35   2          GetCardID = MFC_Auto_Reader(CardIdentifyMgr.CID);
  36   2          if ( GetCardID == S_SUCCESS )
  37   2          {
  38   3            CardIdentifyMgr.Status = CheckCardIDifRegistered;
  39   3            RefreshSystemSleepTime();
  40   3          }
  41   2        }
  42   1        else if ( CardIdentifyMgr.Status == CheckCardIDifRegistered)
  43   1        {
  44   2          UserID = CompareCardIDwithMemory(CardIdentifyMgr.CID); 
  45   2          if ( UserID == 0x00 )   //Card ID is not registered
  46   2          {
  47   3            CardIdentifyMgr.Status = Fail;
  48   3            CardIdentifyMgr.TimeCnt = Def_IdendtifyFailScreenTimeDelay;
  49   3          }
  50   2          else
  51   2          {
  52   3            CardIdentifyMgr.UserID = UserID;
C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 2   

  53   3            CardIdentifyMgr.Status = Success; 
  54   3            CardIdentifyMgr.TimeCnt = Def_IdendtifySuccessScreenTimeDelay;
  55   3          }
  56   2        }
  57   1      }
  58          
  59          uint8_t CompareCardIDwithMemory(uint8_t *Point)//将新卡片ID与已有ID进行比较
  60          {
  61   1        uint8_t i;
  62   1        uint8_t CardUserID;
  63   1      
  64   1        for (i=0;i<DEF_MAX_CARDUSER;i++)
  65   1        {
  66   2          if ( CardMemoryMgr[i].Status == CIDisValid )
  67   2          {
  68   3            if (  (CardMemoryMgr[i].CID[0] == *Point)
  69   3              &&(CardMemoryMgr[i].CID[1] == *(Point+1))
  70   3              &&(CardMemoryMgr[i].CID[2] == *(Point+2))
  71   3              &&(CardMemoryMgr[i].CID[3] == *(Point+3))
  72   3              //&&(CardMemoryMgr[i].CID[4] == *(Point+4))
  73   3               )
  74   3            {
  75   4              CardUserID = CardMemoryMgr[i].UserID;
  76   4              return CardUserID;
  77   4            }
  78   3          }
  79   2        }
  80   1        return 0;
  81   1      }
  82          
  83          uint8_t Get_Availabe_CardUserID(void)//获取已注册的卡片ID
  84          {
  85   1        uint8_t i;
  86   1        for (i=0;i<DEF_MAX_CARDUSER;i++)
  87   1        {
  88   2          if ( CardMemoryMgr[i].Status != CIDisValid ){
  89   3            return (i+1);
  90   3          }
  91   2        }
  92   1        return 0;
  93   1      }
  94          
  95          status_t SaveCardUserToMemory(uint8_t *Point,uint8_t UserID)//保存卡片用户到EEPROM
  96          {
  97   1        uint8_t j;
  98   1      
  99   1        for (j=0;j<4;j++)
 100   1        {
 101   2          CardMemoryMgr[UserID-1].CID[j] = *(Point+j);
 102   2        }
 103   1        CardMemoryMgr[UserID-1].UserID = UserID;
 104   1        CardMemoryMgr[UserID-1].Status = CIDisValid;
 105   1        
 106   1        WriteCardUserMemoryToEEPROM();
 107   1        return S_SUCCESS;
 108   1      
 109   1      }
 110          
 111          void DeleteCardUserfromMemory(uint8_t UserID)//从EEPROM中删除卡片用户
 112          {
 113   1        uint8_t j;
 114   1      
C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 3   

 115   1        CardMemoryMgr[UserID-1].Status = CIDisInvalid;
 116   1        CardMemoryMgr[UserID-1].UserID = 0xFF;
 117   1        for (j=0;j<4;j++)
 118   1        {
 119   2          CardMemoryMgr[UserID-1].CID[j] = 0xFF;
 120   2        }
 121   1        WriteCardUserMemoryToEEPROM();
 122   1      }
 123          
 124          void DeleteAllCardUserfromMemory(void)//从EEPROM中删除所有卡片用户
 125          {
 126   1        uint8_t i,j;
 127   1      
 128   1        for (i=0;i<DEF_MAX_CARDUSER;i++)
 129   1        {
 130   2      
 131   2          CardMemoryMgr[i].Status = CIDisInvalid;
 132   2          CardMemoryMgr[i].UserID = 0xFF;
 133   2          for (j=0;j<4;j++)
 134   2          {
 135   3            CardMemoryMgr[i].CID[j] = 0xFF;
 136   3          }
 137   2      
 138   2        } 
 139   1        WriteCardUserMemoryToEEPROM();
 140   1      }
 141          
 142          bool_t IfCardUserIDisRegistered(uint8_t CardUserID)//判断卡片用户ID是否注册
 143          {
 144   1        uint8_t i;
 145   1      
 146   1        for (i=0;i<DEF_MAX_CARDUSER;i++)
 147   1        {
 148   2          if ( CardMemoryMgr[i].Status == CIDisValid )
 149   2            {
 150   3              if (  CardMemoryMgr[i].UserID == CardUserID)
 151   3              {
 152   4                return bTRUE;
 153   4              }
 154   3            }
 155   2        }
 156   1        return bFALSE;
 157   1      }
 158          
 159          uint8_t CheckHowManyRegisteredCardUser( void )//检查已注册卡片用户数量
 160          {
 161   1        uint8_t i,UserNum;
 162   1        UserNum =0;
 163   1        for (i=0;i<DEF_MAX_CARDUSER;i++)
 164   1        {
 165   2          if ( CardMemoryMgr[i].Status == CIDisValid )
 166   2          {
 167   3            UserNum++;
 168   3          }
 169   2        }
 170   1        return UserNum;
 171   1      }
 172          
 173          void ShowRegisterCardUser(void)//注册磁卡用户
 174          {
 175   1        status_t GetCardID;
 176   1      
C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 4   

 177   1        if ( CardUserRegisterMgr.Status == StartCardUserRegister )
 178   1        {
 179   2          if ((CheckMemoryMgr.FpMasterNum == 0x00 )
 180   2            &&(CheckMemoryMgr.PasscodeMasterNum == 0x00)
 181   2          )
 182   2          {
 183   3            CardUserRegisterMgr.Status = Fail;
 184   3            CardUserRegisterMgr.ErrorType = SystemNoMaster;
 185   3            CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;
 186   3            PLAY_VOICE_ONESEGMENT(VOICE_PleaseAddMasterFirst);
 187   3            #ifdef Function_ScreenDisplay
                    Clear_Screen();
                    DisHZ16x14Str(3,14,AddMasterStr,NormalDisplay);
                    #endif
 191   3          }
 192   2          else
 193   2          {
 194   3            if ( CheckMemoryMgr.CardUserNum < DEF_MAX_CARDUSER )
 195   3            {
 196   4              CardUserRegisterMgr.Status = InputCardUserID;
 197   4              DataInputMgr.Status = InputIdle;
 198   4              PLAY_VOICE_ONESEGMENT(VOICE_PleaseInputID);
 199   4              #ifdef Function_ScreenDisplay
                      Clear_Screen();
                      DisHZ16x14Str(3,0,InputUserIDStr,NormalDisplay);
                      #endif
 203   4            }
 204   3            else
 205   3            {
 206   4              CardUserRegisterMgr.Status = Fail;
 207   4              CardUserRegisterMgr.ErrorType = MemoryIsFull;
 208   4              CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;
 209   4              PLAY_VOICE_ONESEGMENT(VOICE_UsersAreFull);
 210   4              #ifdef Function_ScreenDisplay
                      Clear_Screen();
                      DisHZ16x14Str(3,36,UsersFullStr,NormalDisplay);
                      #endif
 214   4            }
 215   3          }
 216   2          
 217   2        }
 218   1        if ( CardUserRegisterMgr.Status == InputCardUserID )
 219   1          {
 220   2            CardUserRegisterMgr.UserID = Get_Availabe_CardUserID();
 221   2            CardUserRegisterMgr.Status = ReadingCardID; 
 222   2            CardUserRegisterMgr.TimeCnt = Def_UserSwingCardTimeDelay;   //set to 5s
 223   2            //GUI_Flag_RefreshLCD = bTRUE;
 224   2            PLAY_VOICE_ONESEGMENT(VOICE_PleaseSwingCard);
 225   2            #ifdef Function_ScreenDisplay
                    Clear_Screen();
                    DisHZ16x14Str(3,40,PleaseSwingCardStr,NormalDisplay);
                    #endif
 229   2          }
 230   1        else if ( CardUserRegisterMgr.Status == ReadingCardID)
 231   1        {
 232   2          GetCardID = MFC_Auto_Reader(CardUserRegisterMgr.CID);
 233   2          if ( GetCardID == S_SUCCESS )
 234   2          {
 235   3            CardUserRegisterMgr.Status = SavedCardID;
 236   3          }
 237   2          if ( --CardUserRegisterMgr.TimeCnt < 1 )
 238   2          {
C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 5   

 239   3            CardUserRegisterMgr.Status = Fail;
 240   3            CardUserRegisterMgr.ErrorType = TimeOut;
 241   3            CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;  
 242   3            //GUI_Flag_RefreshLCD = bTRUE;
 243   3            PLAY_VOICE_TWOSEGMENT(VOICE_Operation,VOICE_Fail);
 244   3            #ifdef Function_ScreenDisplay
                    Clear_Screen();
                    DisHZ16x14Str(3,36,OperationFailStr,NormalDisplay);
                    #endif
 248   3          }
 249   2        }
 250   1        else if ( CardUserRegisterMgr.Status ==  SavedCardID )
 251   1        {
 252   2          if (CompareCardIDwithMemory(CardUserRegisterMgr.CID) == 0x00 )    //card CID is not be used
 253   2          {
 254   3            if ( SaveCardUserToMemory(CardUserRegisterMgr.CID,CardUserRegisterMgr.UserID) == S_SUCCESS )
 255   3            {
 256   4              CardUserRegisterMgr.Status = Success;
 257   4              CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;  
 258   4              //GUI_Flag_RefreshLCD = bTRUE;
 259   4              PLAY_VOICE_TWOSEGMENT(VOICE_Operation,VOICE_Success);
 260   4              #ifdef Function_ScreenDisplay
                      Clear_Screen();
                      DisHZ16x14Str(3,36,OperationSuccessStr,NormalDisplay);
                      #endif
 264   4              CheckMemoryMgr.CardUserNum+=1;
 265   4            }
 266   3            else
 267   3            {
 268   4              CardUserRegisterMgr.Status = Fail;
 269   4              CardUserRegisterMgr.ErrorType = MemoryIsFull;
 270   4              CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;  
 271   4              PLAY_VOICE_ONESEGMENT(VOICE_UsersAreFull);
 272   4              Hardware_DelayMs(100);
 273   4              #ifdef Function_ScreenDisplay
                      Clear_Screen();
                      DisHZ16x14Str(3,36,UsersFullStr,NormalDisplay);
                      #endif
 277   4            }
 278   3          }
 279   2          else
 280   2          {
 281   3            CardUserRegisterMgr.Status = Fail;
 282   3            CardUserRegisterMgr.ErrorType = CardCIDisBeUsed;
 283   3            CardUserRegisterMgr.TimeCnt = Def_MessageBoxTimeDelay;  
 284   3            //GUI_Flag_RefreshLCD = bTRUE;
 285   3            PLAY_VOICE_TWOSEGMENT(VOICE_Duplicate,VOICE_Card);
 286   3            #ifdef Function_ScreenDisplay
                    DisHZ16x14Str(3,36,CardCIDisBeUsedStr,NormalDisplay);
                    #endif
 289   3          }
 290   2        }
 291   1        else if ( CardUserRegisterMgr.Status ==  Success )
 292   1          {
 293   2            if ( --CardUserRegisterMgr.TimeCnt < 1 )
 294   2            {
 295   3              //CardUserRegisterMgr.Status = StartCardUserRegister;
 296   3              GoToCardMenu();
 297   3              #ifdef Function_EventLog
                      GUI_CreatAndSaveLog(AddCardUser);
                      #endif
 300   3            }
C51 COMPILER V9.60.0.0   MFC                                                               04/25/2023 09:51:32 PAGE 6   

 301   2          }
 302   1        else if ( CardUserRegisterMgr.Status == Fail )
 303   1          {
 304   2      //      if (CardUserRegisterMgr.ErrorType == UserIDisRegistered)
 305   2      //      {
 306   2      //      
 307   2      //      }
 308   2      //      else if ( CardUserRegisterMgr.ErrorType == SystemNoMaster )
 309   2      //      {
 310   2      //        
 311   2      //      }
 312   2      //      else if ( CardUserRegisterMgr.ErrorType == MemoryIsFull )
 313   2      //      {
 314   2      //      
 315   2      //      }
 316   2      //      else if ( CardUserRegisterMgr.ErrorType == CardCIDisBeUsed )
 317   2      //      {
 318   2      //        
 319   2      //      }
 320   2      //      else
 321   2      //      {
 322   2      //        
 323   2      //      }
 324   2            if ( CardUserRegisterMgr.TimeCnt-- < 1 )
 325   2            {
 326   3              GoToCardMenu();
 327   3            }
 328   2          }
 329   1      }
 330          
 331          
 332          
 333          
 334          
 335          
 336          
 337          
 338          
 339          
 340          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    942    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
