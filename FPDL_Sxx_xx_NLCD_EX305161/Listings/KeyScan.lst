C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/16/2023 16:37:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Objects\KeyScan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Softwares\ModuleLogic\KeyScan.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCD
                    -IR(.\Drivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protoco
                    -l;.\Softwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tu
                    -ya) DEBUG PRINT(.\Listings\KeyScan.lst) TABS(2) OBJECT(.\Objects\KeyScan.obj)

line level    source

   1          #include "IO.h"
   2          #include "KeyScan.h"
   3          #include "global_variable.h"
   4          #include "Key_SinOne.h"
   5          
   6          #define Def_KeyHoldTimeLimited 96     //1.5s
   7          #define Def_KeyHoldLongTimeLimited  192   //3s
   8          
   9          keycode_t NewKeycode,LastKeycode;
  10          uint16_t KeyHoldTimeCnt=0;
  11          uint8_t KEYSCANTIMECNT=0;
  12          extern bit KeyJustWakeUp;
  13          
  14          TouchKeyStatus_t TouchKeyStatus;
  15          
  16          void Key_Init(void)
  17          {
  18   1        TouchKeyStatus.KEY_ZERO_Pressed = bFALSE;
  19   1        TouchKeyStatus.KEY_ONE_Pressed = bFALSE;
  20   1        TouchKeyStatus.KEY_TWO_Pressed = bFALSE;
  21   1        TouchKeyStatus.KEY_THREE_Pressed = bFALSE;
  22   1        TouchKeyStatus.KEY_FOUR_Pressed = bFALSE;
  23   1        TouchKeyStatus.KEY_FIVE_Pressed = bFALSE;
  24   1        TouchKeyStatus.KEY_SIX_Pressed = bFALSE;
  25   1        TouchKeyStatus.KEY_SEVEN_Pressed = bFALSE;
  26   1        TouchKeyStatus.KEY_EIGHT_Pressed = bFALSE;
  27   1        TouchKeyStatus.KEY_NINE_Pressed = bFALSE;
  28   1        TouchKeyStatus.KEY_POUNDSIGN_Pressed = bFALSE;
  29   1        TouchKeyStatus.KEY_ASTERISK_Pressed = bFALSE;
  30   1        TouchKeyStatus.KEY_DOORBELL_Pressed = bFALSE;
  31   1        TouchKeyStatus.KEY_DOORCLOSE_Pressed = bFALSE;
  32   1        TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  33   1        AwakeSystemKeyMgr.IsDoorBellKeyAwake = bFALSE;
  34   1        AwakeSystemKeyMgr.IsPoundsignKeyAwake = bFALSE;
  35   1      }
  36          
  37          keycode_t Key_Scan(void)
  38          {
  39   1        uint32_t key_value,temp;
  40   1        
  41   1        keycode_t PostKeycode;
  42   1        
  43   1        key_value = KeyScanDrive();
  44   1        
  45   1        if(key_value!=0)
  46   1        {
  47   2          temp = key_value;
  48   2        }
  49   1        
  50   1        if (SystemPowerMgr.AwakeTimerCnt < 32 )
  51   1        {
  52   2          return KEY_NONE;
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/16/2023 16:37:57 PAGE 2   

  53   2        }
  54   1        if( KeyJustWakeUp == 1 )
  55   1        {
  56   2          if( key_value == 0 )
  57   2          {
  58   3            KeyJustWakeUp = 0;
  59   3          }
  60   2          return KEY_NONE;
  61   2        }
  62   1        if( CurrentScreen == SCREEN_Main )
  63   1        {
  64   2          if( AwakeSystemKeyMgr.IsDoorBellKeyAwake == bTRUE )
  65   2          {
  66   3            AwakeSystemKeyMgr.IsDoorBellKeyAwake = bFALSE;
  67   3            return KEY_DOORBELL;
  68   3          }
  69   2          if( AwakeSystemKeyMgr.IsPoundsignKeyAwake == bTRUE )
  70   2          {
  71   3            AwakeSystemKeyMgr.IsPoundsignKeyAwake = bFALSE;
  72   3            return KEY_POUNDSIGN;
  73   3          }
  74   2        }
  75   1      
  76   1        KeyPressedJudge(key_value);
  77   1      
  78   1        if ( PINMACRO_ONBOARD_BUTTON_STATUS == 0 )
  79   1        {
  80   2          DEBUG_MARK;
  81   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
  82   2        }
  83   1        #ifdef INSIDEBUTTONINTOMAINMENU
                else if (SystemPowerMgr.AwakeSource == SystemResetKey)    
                  {
                      TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bTRUE;
                      SystemPowerMgr.AwakeSource = DoNotCare; 
                      //CurrentScreen = SCREEN_ManagerIdentify;
                      //ManagerIdentifyMgr.Status = StartManagerIdentify;
                  }
                #endif
  92   1        else{
  93   2          TouchKeyStatus.KEY_INSIDEBUTTON_Pressed = bFALSE;
  94   2        }
  95   1      
  96   1          
  97   1        if ( (TouchKeyStatus.KEY_ZERO_Pressed == bTRUE )&&(LastKeycode == KEY_ZERO)){
  98   2          NewKeycode = KEY_ZERO;
  99   2        }
 100   1        else if ( (TouchKeyStatus.KEY_ONE_Pressed == bTRUE )&&(LastKeycode == KEY_ONE)){
 101   2          NewKeycode = KEY_ONE;
 102   2        }
 103   1        else if ( (TouchKeyStatus.KEY_TWO_Pressed == bTRUE )&&(LastKeycode == KEY_TWO)){
 104   2          NewKeycode = KEY_TWO;
 105   2        }
 106   1        else if ( (TouchKeyStatus.KEY_THREE_Pressed == bTRUE )&&(LastKeycode == KEY_THREE)){
 107   2          NewKeycode = KEY_THREE;
 108   2        }
 109   1        else if ( (TouchKeyStatus.KEY_FOUR_Pressed == bTRUE )&&(LastKeycode == KEY_FOUR)){
 110   2          NewKeycode = KEY_FOUR;
 111   2        }
 112   1        else if ( (TouchKeyStatus.KEY_FIVE_Pressed == bTRUE )&&(LastKeycode == KEY_FIVE)){
 113   2          NewKeycode = KEY_FIVE;
 114   2        }
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/16/2023 16:37:57 PAGE 3   

 115   1        else if ( (TouchKeyStatus.KEY_SIX_Pressed == bTRUE )&&(LastKeycode == KEY_SIX)){
 116   2          NewKeycode = KEY_SIX;
 117   2        }
 118   1        else if ( (TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE )&&(LastKeycode == KEY_SEVEN)){
 119   2          NewKeycode = KEY_SEVEN;
 120   2        }
 121   1        else if ( (TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE )&&(LastKeycode == KEY_EIGHT)){
 122   2          NewKeycode = KEY_EIGHT;
 123   2        }
 124   1        else if ( (TouchKeyStatus.KEY_NINE_Pressed == bTRUE )&&(LastKeycode == KEY_NINE)){
 125   2          NewKeycode = KEY_NINE;
 126   2        }
 127   1        else if ( (TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE )&&(LastKeycode == KEY_POUNDSIGN)){
 128   2          NewKeycode = KEY_POUNDSIGN;
 129   2        }
 130   1        else if ( (TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE )&&(LastKeycode == KEY_ASTERISK)){
 131   2          NewKeycode = KEY_ASTERISK;
 132   2        }
 133   1        else if ( (TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE )&&(LastKeycode == KEY_INSIDEBUTTON)){
 134   2          NewKeycode = KEY_INSIDEBUTTON;
 135   2        }
 136   1        else if ((TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )&&(LastKeycode == KEY_DOORBELL))
 137   1        {
 138   2          NewKeycode = KEY_DOORBELL;
 139   2          DEBUG_MARK;
 140   2        }
 141   1        
 142   1        else if ( TouchKeyStatus.KEY_ZERO_Pressed == bTRUE ){
 143   2          NewKeycode = KEY_ZERO;
 144   2        }
 145   1        else if ( TouchKeyStatus.KEY_ONE_Pressed == bTRUE ){
 146   2          NewKeycode = KEY_ONE;
 147   2        }
 148   1        else if ( TouchKeyStatus.KEY_TWO_Pressed == bTRUE ){
 149   2          NewKeycode = KEY_TWO;
 150   2        }
 151   1        else if ( TouchKeyStatus.KEY_THREE_Pressed == bTRUE ){
 152   2          NewKeycode = KEY_THREE;
 153   2        }
 154   1        else if ( TouchKeyStatus.KEY_FOUR_Pressed == bTRUE ){
 155   2          NewKeycode = KEY_FOUR;
 156   2        }
 157   1        else if ( TouchKeyStatus.KEY_FIVE_Pressed == bTRUE ){
 158   2          NewKeycode = KEY_FIVE;
 159   2        }
 160   1        else if ( TouchKeyStatus.KEY_SIX_Pressed == bTRUE ){
 161   2          NewKeycode = KEY_SIX;
 162   2        }
 163   1        else if ( TouchKeyStatus.KEY_SEVEN_Pressed == bTRUE ){
 164   2          NewKeycode = KEY_SEVEN;
 165   2        }
 166   1        else if ( TouchKeyStatus.KEY_EIGHT_Pressed == bTRUE ){
 167   2          NewKeycode = KEY_EIGHT;
 168   2        }
 169   1        else if ( TouchKeyStatus.KEY_NINE_Pressed == bTRUE ){
 170   2          NewKeycode = KEY_NINE;
 171   2        }
 172   1        else if ( TouchKeyStatus.KEY_POUNDSIGN_Pressed == bTRUE ){
 173   2          NewKeycode = KEY_POUNDSIGN;
 174   2        }
 175   1        else if ( TouchKeyStatus.KEY_ASTERISK_Pressed == bTRUE ){
 176   2          NewKeycode = KEY_ASTERISK;
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/16/2023 16:37:57 PAGE 4   

 177   2        }
 178   1        else if ( TouchKeyStatus.KEY_INSIDEBUTTON_Pressed == bTRUE ){
 179   2          NewKeycode = KEY_INSIDEBUTTON;
 180   2        }
 181   1        else if (TouchKeyStatus.KEY_DOORBELL_Pressed == bTRUE )
 182   1        {
 183   2          NewKeycode = KEY_DOORBELL;
 184   2        }
 185   1        
 186   1        else {
 187   2          NewKeycode = KEY_NONE;
 188   2        } 
 189   1      
 190   1        LEDsMgr.Keycode = NewKeycode;
 191   1      
 192   1        if ( NewKeycode != KEY_NONE )
 193   1        {
 194   2          if ( NewKeycode !=LastKeycode )
 195   2          {
 196   3            if (NewKeycode != KEY_INSIDEBUTTON)
 197   3            {
 198   4              PostKeycode = NewKeycode;
 199   4            }
 200   3            else{
 201   4              PostKeycode = KEY_NONE; 
 202   4              DEBUG_MARK;
 203   4            }
 204   3            LastKeycode = NewKeycode;
 205   3            KeyHoldTimeCnt=0;
 206   3          }
 207   2          else
 208   2          {
 209   3            if ( KeyHoldTimeCnt <= Def_KeyHoldLongTimeLimited )
 210   3            {
 211   4              KeyHoldTimeCnt++;
 212   4              PostKeycode = KEY_NONE;     
 213   4            }
 214   3      
 215   3            if ( KeyHoldTimeCnt > Def_KeyHoldTimeLimited )
 216   3            {
 217   4              if ((KeyHoldTimeCnt >= Def_KeyHoldLongTimeLimited )&&( NewKeycode == KEY_INSIDEBUTTON))
 218   4              {
 219   5                PostKeycode = KEY_INSIDEBUTTON_HOLD_LONG;       
 220   5              }
 221   4              else{
 222   5                PostKeycode = KEY_NONE;
 223   5              }
 224   4              
 225   4              if ( ++KEYSCANTIMECNT > 127 ){
 226   5                KEYSCANTIMECNT=0;
 227   5              }
 228   4            }
 229   3            else{
 230   4              PostKeycode = KEY_NONE;
 231   4            }
 232   3          }
 233   2        }
 234   1        else
 235   1        {
 236   2          if (LastKeycode == KEY_INSIDEBUTTON){
 237   3            PostKeycode = LastKeycode;
 238   3          }
C51 COMPILER V9.60.0.0   KEYSCAN                                                           05/16/2023 16:37:57 PAGE 5   

 239   2          else{
 240   3            PostKeycode = KEY_NONE; 
 241   3          }
 242   2          LastKeycode = NewKeycode;
 243   2          KeyHoldTimeCnt=0;
 244   2        }
 245   1      
 246   1        DEBUG_MARK;
 247   1      
 248   1        return PostKeycode;
 249   1      
 250   1      }
 251          
 252          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    879    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
