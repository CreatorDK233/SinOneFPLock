C51 COMPILER V9.60.0.0   SSI1_INIT                                                         04/26/2023 11:06:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SSI1_INIT
OBJECT MODULE PLACED IN .\Objects\SSI1_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Drivers\Lib\c\SSI1_Init.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\D
                    -rivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.\So
                    -ftwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic;.\Drivers\Protocol\YC_NFC;.\Drivers\Protocol\WIFI_Tuya) DE
                    -BUG PRINT(.\Listings\SSI1_Init.lst) TABS(2) OBJECT(.\Objects\SSI1_Init.obj)

line level    source

   1          #include "Function_Init.H"
   2          
   3          //选择三合一模式：
   4          #define  Uart1   0
   5          #define  TWI1    1
   6          #define  SPI1    2
   7          
   8          #define  SSI1_Mode  Uart1
   9          
  10          void Uart1_Init(uint Freq,unsigned long int baud);
  11          void TWI1_Init(void);
  12          void SPI1_Init(void);
  13          
  14          
  15          /*****************************************************
  16          *函数名称：void SSI1_Test(void)
  17          *函数功能：SSI1测试
  18          *入口参数：void
  19          *出口参数：void
  20          *****************************************************/
  21          void SSI1_Test(void)
  22          {
  23   1      #if (0)
                Uart1_Init(32,9600);
                while(1)
                {
                  US1CON3 = 0xAA;
                  while(!Uart1SendFlag);
                  Uart1SendFlag = 0;
                }
              #endif
  32   1        
  33   1      #if (0)
                TWI1_Init();
                while(1)
                {
                  US1CON1 |= 0x20;    //产生起始条件
                      while(!TWI1Flag);
                      TWI1Flag = 0;   
                  US1CON3 = 0x10;     ////发送地址及写命令
                      while(!TWI1Flag);
                      TWI1Flag = 0;
                  US1CON3 = 0x55;
                      while(!TWI1Flag);
                      TWI1Flag = 0;
                  Soft_Delay_us(100);
                  US1CON1 |= 0x10;
                  Soft_Delay_us(100);
                }
              #endif
  51   1      
  52   1      #if (0)
C51 COMPILER V9.60.0.0   SSI1_INIT                                                         04/26/2023 11:06:24 PAGE 2   

                SPI1_Init();
                while(1)
                {
                  US1CON2 = 0xAA;
                  while(!SPI1Flag);
                  SPI1Flag = 0;
                      Soft_Delay_us(1000);
                }
              #endif  
  62   1      }
  63          /*****************************************************
  64          *函数名称：void Uart1_Init(uint Freq,unsigned long int baud)
  65          *函数功能：Uart1中断初始化
  66          *入口参数：Freq-主频，baud-波特率
  67          *出口参数：void
  68          *****************************************************/
  69          void Uart1_Init(uint Freq,unsigned long int baud)
  70          {
  71   1        P1CON &= 0xF5;    //TX/RX设置为输入带上拉
  72   1        P1PH  |= 0x0A;
  73   1        
  74   1        OTCON |= 0xC0;    //串行接口SSI1选择Uart1通信
  75   1        US1CON0 = 0x50;   //设置通信方式为模式一，允许接收
  76   1        US1CON1 = Freq*1000000/baud;   //波特率低位控制
  77   1        US1CON2 = (Freq*1000000/baud)>>8;   //波特率高位控制
  78   1        IE2 |= 0x01;      //开启SSI1中断
  79   1          EA = 1; 
  80   1      }
  81          
  82          /*****************************************************
  83          *函数名称：void TWI1_Init(void)
  84          *函数功能：TWI1初始化
  85          *入口参数：void
  86          *出口参数：void
  87          *****************************************************/
  88          void TWI1_Init(void)
  89          {
  90   1        OTCON |= 0x80;   //选择TWI1模式
  91   1        US1CON0 = 0x80;  //主模式， 使能应答标志位
  92   1        US1CON1 = 0x05;  //---- xxxx  x为时钟速率
  93   1        IE2 |= 0x01;
  94   1        EA = 1;
  95   1      }
  96          
  97          /*****************************************************
  98          *函数名称：void SPI1_Init(void)
  99          *函数功能：SPI1初始化
 100          *入口参数：void
 101          *出口参数：void
 102          *****************************************************/
 103          void SPI1_Init(void)
 104          {
 105   1        OTCON |= 0X40;    //选择SPI1模式
 106   1        US1CON0 = 0x3F;   //设置SPI1为主设备，SCK空闲时间为高电平，SCK周期第二沿采集数据，时钟速率为Fsys/128
 107   1        US1CON1 = 0x01;   //MSB优先发送，8位传输，允许发送中断
 108   1        US1CON0 |= 0x80;  //开启SPI1
 109   1        IE2 |= 0x01;
 110   1        EA = 1;
 111   1      }
 112          
 113          
 114          /*****************************************************
C51 COMPILER V9.60.0.0   SSI1_INIT                                                         04/26/2023 11:06:24 PAGE 3   

 115          *函数名称：void TWI1/PI/UART1_Int() interrupt 7
 116          *函数功能：SSI1中断函数
 117          *入口参数：void
 118          *出口参数：void
 119          *****************************************************/
 120          #if (0)
              void Uart1_Int() //interrupt 15   //Uart1中断函数
              {
                if(US1CON0&0x02)    //发送标志位判断
                {
                  US1CON0 &= 0xFE;
                  Uart1SendFlag = 1;
                }
                if((US1CON0&0x01))  //接收标志位判断
                {
                  US1CON0 &= 0xFD;
                  //Uart1ReceiveFlag = 1;
                } 
              }
              #endif
 135          
 136          #if (0)
              void TWI1_Int() //interrupt 15     //TWI1中断函数
              {
                if(US1CON0&0x40)
                {
                  US1CON0 &= 0xbf;  //中断清零
                  TWI1Flag = 1;
                } 
              }
              #endif 
 146          
 147          #if (0)
              void Spi1_Int(void) //interrupt 15    //SPI1中断函数
              {   
                if(US1CON1&0X08)    //发送缓存器空标志判断
                {
                  US1CON1 &= ~0X08;
                }
                if(US1CON1&0X80)    //数据传输标志位判断
                {
                  US1CON1 &= ~0X80;
                  SPI1Flag = 1;
                }
              }
              #endif 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
