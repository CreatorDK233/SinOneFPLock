C51 COMPILER V9.60.0.0   SSI0_INIT                                                         05/16/2023 16:36:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SSI0_INIT
OBJECT MODULE PLACED IN .\Objects\SSI0_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Drivers\Lib\c\SSI0_Init.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\D
                    -rivers\Lib\c;.\Drivers\Lib\H;.\Drivers\Lib\IAP_Lib;.\Drivers\Lib\TouchKey_lib;.\Drivers\Physical;.\Drivers\Protocol;.\So
                    -ftwares\Application;.\Softwares\Basic;.\Softwares\ModuleLogic) DEBUG PRINT(.\Listings\SSI0_Init.lst) TABS(2) OBJECT(.\Ob
                    -jects\SSI0_Init.obj)

line level    source

   1          #include "Function_Init.H"
   2          
   3          //选择三合一模式：
   4          #define  Uart0   0
   5          #define  TWI0    1
   6          #define  SPI0    2
   7          
   8          #define  SSI0_Mode  TWI0
   9          
  10          void Uart0_Init(uint Freq,unsigned long int baud);
  11          void TWI0_Init(void);
  12          void SPI0_Init(void);
  13          
  14          bit Uart0SendFlag = 0;    //Uart0发送中断标志位
  15          bit Uart0ReceiveFlag = 0; //Uart0接收中断标志位
  16          bit SPI0Flag = 0;         //SPI0数据传输完成标志位
  17          bit TWI0Flag = 0;         //TWI0中断标志位
  18          
  19          /*****************************************************
  20          *函数名称：void SSI0_Test(void)
  21          *函数功能：SSI0测试
  22          *入口参数：void
  23          *出口参数：void
  24          *****************************************************/
  25          void SSI0_Test(void)
  26          {
  27   1      #if (SSI0_Mode == Uart0)
                Uart0_Init(32,9600);
                while(1)
                {
                  US0CON3 = 0xAA;
                  while(!Uart0SendFlag);
                  Uart0SendFlag = 0;
                }
              #endif
  36   1        
  37   1      #if (SSI0_Mode == TWI0)
  38   1        TWI0_Init();
  39   1        while(1)
  40   1        {
  41   2          US0CON1 |= 0x20;    //产生起始条件
  42   2          while(!TWI0Flag);
  43   2              TWI0Flag = 0;   
  44   2          US0CON3 = 0x10;     //发送地址及写命令
  45   2              while(!TWI0Flag);
  46   2              TWI0Flag = 0;
  47   2              US0CON3 = 0x55;     //发送数据
  48   2              while(!TWI0Flag);
  49   2              TWI0Flag = 0;
  50   2          Soft_Delay_us(100);
  51   2          US0CON1 |= 0x10;
  52   2          Soft_Delay_us(100);
C51 COMPILER V9.60.0.0   SSI0_INIT                                                         05/16/2023 16:36:54 PAGE 2   

  53   2        }
  54   1      #endif
  55   1      
  56   1      #if (SSI0_Mode == SPI0)
                SPI0_Init();
                while(1)
                {
                  US0CON2 = 0xAA;
                  while(!SPI0Flag);
                  SPI0Flag = 0;
                      Soft_Delay_us(1000);
                }
              #endif  
  66   1      }
  67          /*****************************************************
  68          *函数名称：void Uart0_Init(uint Freq,unsigned long int baud)
  69          *函数功能：Uart0中断初始化
  70          *入口参数：Freq-主频，baud-波特率
  71          *出口参数：void
  72          *****************************************************/
  73          void Uart0_Init(uint Freq,unsigned long int baud)
  74          {
  75   1        P0CON &= 0xCF;    //TX/RX设置为输入带上拉
  76   1        P0PH  |= 0x30;
  77   1        
  78   1        OTCON |= 0x30;    //串行接口SSI0选择Uart0通信
  79   1        US0CON0 = 0x50;   //设置通信方式为模式一，允许接收
  80   1        US0CON1 = Freq*1000000/baud;   //波特率低位控制
  81   1        US0CON2 = (Freq*1000000/baud)>>8;   //波特率高位控制
  82   1        IE1 |= 0x01;      //开启SSI0中断
  83   1          EA = 1; 
  84   1      }
  85          
  86          /*****************************************************
  87          *函数名称：void TWI0_Init(void)
  88          *函数功能：TWI0初始化
  89          *入口参数：void
  90          *出口参数：void
  91          *****************************************************/
  92          void TWI0_Init(void)
  93          {
  94   1        OTCON |= 0x20;   //选择TWI0模式
  95   1        US0CON0 = 0x80;  //主模式， 使能应答标志位
  96   1        US0CON1 = 0x05;  //---- xxxx  x为时钟速率
  97   1        IE1 |= 0x01;
  98   1        EA = 1;
  99   1      }
 100          
 101          /*****************************************************
 102          *函数名称：void SPI0_Init(void)
 103          *函数功能：SPI0初始化
 104          *入口参数：void
 105          *出口参数：void
 106          *****************************************************/
 107          void SPI0_Init(void)
 108          {
 109   1        OTCON |= 0X10;    //选择SPI0模式
 110   1        US0CON0 = 0x3B;   //设置SPI0为主设备，SCK空闲时间为高电平，SCK周期第二沿采集数据，时钟速率为Fsys/8
 111   1        US0CON1 = 0x01;   //MSB优先发送，8位传输，允许发送中断
 112   1        US0CON0 |= 0x80;  //开启SPI0
 113   1        //IE1 |= 0x01;
 114   1        EA = 1;
C51 COMPILER V9.60.0.0   SSI0_INIT                                                         05/16/2023 16:36:54 PAGE 3   

 115   1      }
 116          
 117          
 118          /*****************************************************
 119          *函数名称：void TWI0/PI/UART1_Int() interrupt 7
 120          *函数功能：SSI0中断函数
 121          *入口参数：void
 122          *出口参数：void
 123          *****************************************************/
 124          #if (0)
              void Uart0_Int() //interrupt 7   //Uart0中断函数
              {
                if(US0CON0&0x02)    //发送标志位判断
                {
                  US0CON0 &= 0xFE;
                  Uart0SendFlag = 1;
                }
                if((US0CON0&0x01))  //接收标志位判断
                {
                  US0CON0 &= 0xFD;
                  Uart0ReceiveFlag = 1;
                } 
              }
              #endif
 139          
 140          #if (0)
              void TWI0_Int() //interrupt 7     //TWI0中断函数
              {
                if(US0CON0&0x40)
                {
                  US0CON0 &= 0xbf;  //中断清零
                  TWI0Flag = 1;
                } 
              }
              #endif 
 150          
 151          #if (0)
              void Spi0_Int(void) //interrupt 7    //SPI0中断函数
              {   
                if(US0CON1&0X08)    //发送缓存器空标志判断
                {
                  US0CON1 &= ~0X08;
                }
                if(US0CON1&0X80)    //数据传输标志位判断
                {
                  US0CON1 &= ~0X80;
                  SPI0Flag = 1;
                }
              }
              #endif 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   SSI0_INIT                                                         05/16/2023 16:36:54 PAGE 4   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
